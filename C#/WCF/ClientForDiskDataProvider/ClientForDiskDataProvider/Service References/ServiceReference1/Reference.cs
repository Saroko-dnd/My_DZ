//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientForDiskDataProvider.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainDriveInfo", Namespace="http://schemas.datacontract.org/2004/07/WCFdriversInfoServiceDLL")]
    [System.SerializableAttribute()]
    public partial class MainDriveInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailableSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalSpaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailableSpace {
            get {
                return this.AvailableSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableSpaceField, value) != true)) {
                    this.AvailableSpaceField = value;
                    this.RaisePropertyChanged("AvailableSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalSpace {
            get {
                return this.TotalSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalSpaceField, value) != true)) {
                    this.TotalSpaceField = value;
                    this.RaisePropertyChanged("TotalSpace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDiskInfo")]
    public interface IDiskInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetDriversData", ReplyAction="http://tempuri.org/IDiskInfo/GetDriversDataResponse")]
        string GetDriversData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetDriversData", ReplyAction="http://tempuri.org/IDiskInfo/GetDriversDataResponse")]
        System.Threading.Tasks.Task<string> GetDriversDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetOneDriveData", ReplyAction="http://tempuri.org/IDiskInfo/GetOneDriveDataResponse")]
        ClientForDiskDataProvider.ServiceReference1.MainDriveInfo GetOneDriveData(string DriveName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetOneDriveData", ReplyAction="http://tempuri.org/IDiskInfo/GetOneDriveDataResponse")]
        System.Threading.Tasks.Task<ClientForDiskDataProvider.ServiceReference1.MainDriveInfo> GetOneDriveDataAsync(string DriveName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetDriversNames", ReplyAction="http://tempuri.org/IDiskInfo/GetDriversNamesResponse")]
        string[] GetDriversNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiskInfo/GetDriversNames", ReplyAction="http://tempuri.org/IDiskInfo/GetDriversNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetDriversNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDiskInfo/SaveDataInLog")]
        void SaveDataInLog(string ClientName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDiskInfo/SaveDataInLog")]
        System.Threading.Tasks.Task SaveDataInLogAsync(string ClientName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDiskInfoChannel : ClientForDiskDataProvider.ServiceReference1.IDiskInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiskInfoClient : System.ServiceModel.ClientBase<ClientForDiskDataProvider.ServiceReference1.IDiskInfo>, ClientForDiskDataProvider.ServiceReference1.IDiskInfo {
        
        public DiskInfoClient() {
        }
        
        public DiskInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiskInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiskInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiskInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDriversData() {
            return base.Channel.GetDriversData();
        }
        
        public System.Threading.Tasks.Task<string> GetDriversDataAsync() {
            return base.Channel.GetDriversDataAsync();
        }
        
        public ClientForDiskDataProvider.ServiceReference1.MainDriveInfo GetOneDriveData(string DriveName) {
            return base.Channel.GetOneDriveData(DriveName);
        }
        
        public System.Threading.Tasks.Task<ClientForDiskDataProvider.ServiceReference1.MainDriveInfo> GetOneDriveDataAsync(string DriveName) {
            return base.Channel.GetOneDriveDataAsync(DriveName);
        }
        
        public string[] GetDriversNames() {
            return base.Channel.GetDriversNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDriversNamesAsync() {
            return base.Channel.GetDriversNamesAsync();
        }
        
        public void SaveDataInLog(string ClientName) {
            base.Channel.SaveDataInLog(ClientName);
        }
        
        public System.Threading.Tasks.Task SaveDataInLogAsync(string ClientName) {
            return base.Channel.SaveDataInLogAsync(ClientName);
        }
    }
}
