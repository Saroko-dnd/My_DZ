
@using SimpleChat.Models

@model SimpleChat.Models.UserChatPage

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link  href="~/CSS/MainStyleSheet.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>
    <div> 
        @using (Html.BeginForm(null, "Home", FormMethod.Post))
        {
            <div class="form-horizontal">
                <div class="form-group">
                    <p class="col-sm-2 control-label">@Resources.Texts.PUserName</p>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(CurrentUser => CurrentUser.UserName)
                    </div>
                </div>
                <div class="form-group">
                    <p class="col-sm-2 control-label">@Resources.Texts.PUserMessage</p>
                    <div class="col-sm-10">
                        @Html.TextAreaFor(CurrentUser => CurrentUser.UserMessage, htmlAttributes: new { @class = "col-sm-11 TextAreaForUserMessage" })
                    </div>
                </div>
                <div class="col-sm-offset-2 col-sm-10">
                    <input class="btn btn-default" type="submit" value="@Resources.Texts.ButtonSendMessage" name="action:AddNewMessage" />
                </div>
            </div>

            <div class="FlexRowCenterWithSpaceBetweenItems">
                <div class="FlexColumnCenter">
                    <input type="submit" value="@Resources.Texts.ButtonRefreshMessages" name="action:RefreshMessagesOnUserPage" />
                    <div class="FlexRow">
                        @Html.CheckBoxFor(model => model.ReceiveOnlyMessagesCreatedByCurrentUser)
                        <p>@Resources.Texts.POnlyCurrentUserMessages</p>
                    </div>
                </div>
                <div>
                    <div class="FlexRow">
                        @Html.RadioButtonFor(model => model.SortingForMessages, UserChatPage.DoNotSortMessages)
                        <p>@Resources.Texts.PNoSorting</p>
                    </div>
                    <div class="FlexRow">
                        @Html.RadioButtonFor(model => model.SortingForMessages, UserChatPage.SortMessagesByUserName)
                        <p>@UserChatPage.SortMessagesByUserName</p>
                    </div>
                    <div class="FlexRow">
                        @Html.RadioButtonFor(model => model.SortingForMessages, UserChatPage.SortMessagesByDate)
                        <p>@UserChatPage.SortMessagesByDate</p>
                    </div>
                </div>
            </div>

            List<UserMessage> CurrentListOfMessages = Model.LastMessages;
            if (Model.SortingForMessages == UserChatPage.SortMessagesByDate)
            {
                CurrentListOfMessages = CurrentListOfMessages.OrderBy(CurrentMessage => CurrentMessage.Date).ToList();
            }
            else if (Model.SortingForMessages == UserChatPage.SortMessagesByUserName)
            {
                CurrentListOfMessages = CurrentListOfMessages.OrderBy(CurrentMessage => CurrentMessage.UserName).ToList();
            }

            foreach (var CurrentUserMessage in CurrentListOfMessages)
            {
                <div class="DivWithUserMessage FlexColumnCenter">
                    <p>@CurrentUserMessage.Date.ToString()</p>
                    <p><span>From: </span>@CurrentUserMessage.UserName.ToString()</p>
                    <p>@CurrentUserMessage.Message</p>
                </div>
            }
        }
</div>
</body>
</html>
