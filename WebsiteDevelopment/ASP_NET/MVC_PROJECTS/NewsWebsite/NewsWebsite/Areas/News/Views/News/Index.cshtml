
@using NewsWebsite.App_Start
@using NewsWebsite.ClassesForNewsWebsite
@using NewsDataAccess
@using NewsInfrastructure
@using System.Web.Optimization
@model NewsWebsite.Areas.News.Models.PageWithListOfNews

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/CSS/Main.css" rel="stylesheet" />
    <link href="~/CSS/News.css" rel="stylesheet" />
    @Scripts.Render(BundleConfig.VirtualPathForJqueryBundle)
    @Scripts.Render(BundleConfig.VirtualPathForSearchNewsSystemBundle)
    @Scripts.Render(BundleConfig.VirtualPathForUnobtrusiveAjaxBundle)
    @if (Model.AdminIsHere)
    {
        /*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
        <script type="text/javascript" src="~/JS/jquery.jeditable.js"></script>
        <script type="text/javascript" src="~/JS/EditableNews.js"></script>*/
        <text>
            @Scripts.Render(BundleConfig.VirtualPathForEditableNewsBundle)
        </text>
        using (Ajax.BeginForm("SaveChangesInNewsAfterEdit",new { controller = "Admin", area = "Admin" }, new AjaxOptions { UpdateTargetId = "NoTarget", OnSuccess = "EditableNews.MakeEditableUpdatedNews()" },
            new { id = "AjaxFormForUpdatingNewsData" }))
        {

        }
    }
</head>
<body>
    <div> 
        <div class="FlexColumnCenter">
            @Html.ActionLink(Resources.Texts.LinkBackToHomePage, "Index", new { controller = "MainPage", area = "" })
            <p class="HeaderForMainPage">@Resources.Texts.HeaderNews</p>
            <div>
                @using (Ajax.BeginForm("ReturnNewsWithSelectedType", new { controller = "News", area = "News" },
                    new AjaxOptions { UpdateTargetId = "DivWithAllNews", OnSuccess = "EditableNews.MakeAllNewsEditableAgain()" }, 
                    new { id = "AjaxFormForSearchingNews"}))
                {
                    <p>@Resources.Texts.ParagraphSearchNewsByType</p>
                    @Html.EnumDropDownListFor(m => m.TypeOfNewsForSearch, new { id = "DropDownListForNewsType" })
                    <input type="button" value="Search" onclick="SearchNewsSystem.SubmitAjaxFormForSearchNewsByType()"/>
                }
                <p>@Resources.Texts.ParagraphSearchNewsByHeader</p>
                <input id="InputForNewsHeader" list="ListOfNewsWithSimilarName" type="text">
                <datalist id="ListOfNewsWithSimilarName">
                    <option value="small"></option>
                    <option value="medium"></option>
                    <option value="large"></option>
                </datalist>
            </div>
        </div>

        <div id ="DivWithAllNews">
            @Html.Partial(ApplicationConstants.PathFromRouteToNewsCollectionPartialView, Model.AllNews)
        </div>
    </div>
</body>
</html>
