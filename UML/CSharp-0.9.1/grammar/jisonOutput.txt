Processing grammar.
$accept(0)
$end(1)
error(2)
es(3)
e(4)
declaration-statement(5)
COLON_IDENTIFIER(6)
COLON(7)
IDENTIFIER_WITH_TEMPLATE(8)
BOOLEAN_LITERAL(9)
TRUE(10)
FALSE(11)
literal(12)
REAL_LITERAL(13)
INTEGER_LITERAL(14)
STRING_LITERAL(15)
CHARACTER_LITERAL(16)
NULL(17)
namespace-name(18)
namespace-or-type-name(19)
type-name(20)
DOUBLE_COLON(21)
IDENTIFIER_WITH_KEYWORD(22)
DOT(23)
IDENTIFIER(24)
TEMPLATE(25)
EMPTY_TEMPLATE(26)
LT(27)
GT(28)
STARS(29)
STAR(30)
type(31)
non-array-type(32)
array-type(33)
type-with-interr(34)
INTERR(35)
SBYTE(36)
BYTE(37)
SHORT(38)
USHORT(39)
INT(40)
UINT(41)
LONG(42)
ULONG(43)
CHAR(44)
FLOAT(45)
DOUBLE(46)
DECIMAL(47)
BOOL(48)
OBJECT(49)
STRING(50)
VOID(51)
rank-specifiers(52)
rank-specifier(53)
OPEN_BRACKET(54)
dim-separators(55)
CLOSE_BRACKET(56)
COMMA(57)
variable-reference(58)
expression(59)
argument-list(60)
argument(61)
REF(62)
OUT(63)
primary-expression(64)
primary-no-array-creation-expression(65)
array-creation-expression(66)
lambda-expression(67)
cast-expression(68)
parenthesized-expression(69)
double-colon-access(70)
member-access(71)
invocation-expressions(72)
element-access(73)
this-access(74)
base-access(75)
post-increment-expression(76)
post-decrement-expression(77)
delegate-creation-expression(78)
object-creation-expression(79)
typeof-expression(80)
sizeof-expression(81)
checked-expression(82)
unchecked-expression(83)
OP_DBLPTR(84)
block(85)
DELEGATE(86)
delegate-expression(87)
type-expression-list(88)
dbl-expression-list(89)
OPEN_PARENS(90)
CLOSE_PARENS(91)
expression-list(92)
formal-parameter-list(93)
OP_PTR(94)
keyword-invocation(95)
DEFAULT(96)
invocation-expression(97)
AWAIT(98)
THIS(99)
BASE(100)
OP_INC(101)
OP_DEC(102)
type-with-identifier(103)
NEW(104)
IDENTIFIER_WITH_DOT(105)
block-expression-with-brace(106)
argument-list-with-braces(107)
argument-list-with-brace(108)
OPEN_BRACE(109)
CLOSE_BRACE(110)
STACKALLOC(111)
array-initializer(112)
TYPEOF(113)
SIZEOF(114)
CHECKED(115)
UNCHECKED(116)
unary-expression(117)
pre-increment-expression(118)
pre-decrement-expression(119)
PLUS(120)
OP_COALESCING(121)
MINUS(122)
BANG(123)
TILDE(124)
expression-with-comma(125)
multiplicative-expression(126)
DIV(127)
PERCENT(128)
additive-expression(129)
shift-expression(130)
OP_LEFT_SHIFT(131)
RIGHT_SHIFT(132)
relational-expression(133)
OP_LE(134)
OP_GE(135)
IS(136)
AS(137)
equality-expression(138)
OP_EQ(139)
OP_NE(140)
and-expression(141)
AMP(142)
exclusive-or-expression(143)
CARET(144)
inclusive-or-expression(145)
BITWISE_OR(146)
conditional-and-expression(147)
OP_AND(148)
conditional-or-expression(149)
OP_OR(150)
conditional-expression(151)
assignment(152)
assignment-operator(153)
block-expression(154)
block-expression-list-unit(155)
block-expression-list(156)
ASSIGN(157)
OP_ADD_ASSIGNMENT(158)
OP_SUB_ASSIGNMENT(159)
OP_MULT_ASSIGNMENT(160)
OP_DIV_ASSIGNMENT(161)
OP_MOD_ASSIGNMENT(162)
OP_AND_ASSIGNMENT(163)
OP_OR_ASSIGNMENT(164)
OP_XOR_ASSIGNMENT(165)
OP_LEFT_SHIFT_ASSIGNMENT(166)
RIGHT_SHIFT_ASSIGNMENT(167)
constant-expression(168)
boolean-expression(169)
statement(170)
labeled-statement(171)
embedded-statement(172)
empty-statement(173)
statement-expression(174)
SEMICOLON(175)
selection-statement(176)
iteration-statement(177)
jump-statement(178)
try-statement(179)
checked-statement(180)
unchecked-statement(181)
lock-statement(182)
using-statement(183)
unsafe-statement(184)
fixed-statement(185)
modifiers(186)
FIXED(187)
local-variable-declarators(188)
UNSAFE(189)
statement-list(190)
switch-labels(191)
local-variable-declaration(192)
local-constant-declaration(193)
local-variable-declarator(194)
local-variable(195)
local-variable-initializer(196)
CONST(197)
constant-declarators(198)
constant-declarator(199)
if-statement(200)
switch-statement(201)
IF(202)
ELSE(203)
SWITCH(204)
switch-block(205)
switch-sections(206)
switch-section(207)
switch-label(208)
CASE(209)
while-statement(210)
do-statement(211)
for-statement(212)
foreach-statement(213)
WHILE(214)
DO(215)
FOR(216)
for-initializer(217)
for-condition(218)
for-iterator(219)
statement-expression-list(220)
FOREACH(221)
IN(222)
break-statement(223)
continue-statement(224)
goto-statement(225)
return-statement(226)
throw-statement(227)
YIELD(228)
BREAK(229)
CONTINUE(230)
GOTO(231)
RETURN(232)
THROW(233)
TRY(234)
catch-clauses(235)
finally-clause(236)
specific-catch-clauses(237)
general-catch-clause(238)
specific-catch-clause(239)
CATCH(240)
FINALLY(241)
LOCK(242)
USING(243)
resource-acquisition(244)
variable-initializer-list(245)
variable-initializer(246)
global-attributes(247)
global-attribute-sections(248)
global-attribute-section(249)
global-attribute-target-specifier(250)
attribute-list(251)
global-attribute-target(252)
ASSEMBLY(253)
MODULE(254)
attributes(255)
attribute-sections(256)
attribute-section(257)
attribute-target-specifier(258)
attribute-target(259)
FIELD(260)
EVENT(261)
METHOD(262)
PARAM(263)
PROPERTY(264)
TYPE(265)
attribute(266)
attribute-name(267)
attribute-arguments(268)
positional-argument-list(269)
named-argument-list(270)
positional-argument(271)
attribute-argument-expression(272)
named-argument(273)
delegate-declaration(274)
where-base(275)
enum-declaration(276)
ENUM(277)
enum-body(278)
enum-base(279)
enum-member-declarations(280)
enum-member-declaration(281)
interface-declaration(282)
INTERFACE(283)
interface-body(284)
interface-base(285)
interface-type-list(286)
interface-member-declarations(287)
interface-member-declaration(288)
interface-method-declaration(289)
interface-property-declaration(290)
interface-event-declaration(291)
interface-indexer-declaration(292)
interface-accessors(293)
GET(294)
SET(295)
struct-declaration(296)
STRUCT(297)
struct-body(298)
struct-interfaces(299)
struct-member-declarations(300)
struct-member-declaration(301)
constant-declaration(302)
field-declaration(303)
method-declaration(304)
property-declaration(305)
event-declaration(306)
indexer-declaration(307)
operator-declaration(308)
constructor-declaration(309)
static-constructor-declaration(310)
type-declaration(311)
compilationUnit(312)
using-directives(313)
EOF(314)
namespace-member-declarations(315)
namespace-declaration(316)
NAMESPACE(317)
namespace-body(318)
using-directive(319)
using-alias-directive(320)
using-namespace-directive(321)
namespace-member-declaration(322)
class-declaration(323)
modifier(324)
ASYNC(325)
PUBLIC(326)
PARTIAL(327)
PROTECTED(328)
INTERNAL(329)
PRIVATE(330)
ABSTRACT(331)
SEALED(332)
STATIC(333)
READONLY(334)
VOLATILE(335)
VIRTUAL(336)
OVERRIDE(337)
EXTERN(338)
CLASS(339)
class-body(340)
class-base(341)
where-units(342)
where-unit(343)
where-names(344)
where-name(345)
WHERE(346)
class-member-declarations(347)
class-member-declaration(348)
destructor-declaration(349)
member-name(350)
variable-declarators(351)
variable-declarator(352)
method-header(353)
method-body(354)
fixed-parameters(355)
parameter-array(356)
fixed-parameter(357)
ADD(358)
REMOVE(359)
PARAMS(360)
parameter-modifier(361)
accessor-declarations(362)
get-accessor-declaration(363)
set-accessor-declaration(364)
event-accessor-declarations(365)
add-accessor-declaration(366)
remove-accessor-declaration(367)
indexer-declarator(368)
operator-declarator(369)
unary-operator-declarator(370)
binary-operator-declarator(371)
conversion-operator-declarator(372)
OPERATOR(373)
overloadable-operator(374)
overloadable-unary-operator(375)
overloadable-binary-operator(376)
IMPLICIT(377)
EXPLICIT(378)
constructor-declarator(379)
constructor-initializer(380)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .
compilationUnit -> .using-directives EOF
compilationUnit -> .global-attributes EOF
compilationUnit -> .namespace-member-declarations EOF
compilationUnit -> .global-attributes namespace-member-declarations EOF
compilationUnit -> .using-directives namespace-member-declarations EOF
compilationUnit -> .using-directives global-attributes EOF
compilationUnit -> .using-directives global-attributes namespace-member-declarations EOF
using-directives -> .using-directive
using-directives -> .using-directives using-directive
global-attributes -> .global-attribute-sections
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
global-attribute-sections -> .global-attribute-section
global-attribute-sections -> .global-attribute-sections global-attribute-section
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"compilationUnit":1,"using-directives":2,"global-attributes":3,"namespace-member-declarations":4,"using-directive":5,"global-attribute-sections":6,"namespace-member-declaration":7,"using-alias-directive":8,"using-namespace-directive":9,"global-attribute-section":10,"namespace-declaration":11,"type-declaration":12,"USING":13,"OPEN_BRACKET":14,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> using-directives .EOF
compilationUnit -> using-directives .namespace-member-declarations EOF
compilationUnit -> using-directives .global-attributes EOF
compilationUnit -> using-directives .global-attributes namespace-member-declarations EOF
using-directives -> using-directives .using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
global-attributes -> .global-attribute-sections
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
global-attribute-sections -> .global-attribute-section
global-attribute-sections -> .global-attribute-sections global-attribute-section
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":47,"namespace-member-declarations":48,"global-attributes":49,"using-directive":50,"namespace-member-declaration":7,"global-attribute-sections":6,"using-alias-directive":8,"using-namespace-directive":9,"namespace-declaration":11,"type-declaration":12,"global-attribute-section":10,"USING":13,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"OPEN_BRACKET":14,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 3 
compilationUnit -> global-attributes .EOF
compilationUnit -> global-attributes .namespace-member-declarations EOF
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":51,"namespace-member-declarations":52,"namespace-member-declaration":7,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 4 
compilationUnit -> namespace-member-declarations .EOF
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":54,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 5 
using-directives -> using-directive . 
transitions ->  {}

item set 6 
global-attributes -> global-attribute-sections .
global-attribute-sections -> global-attribute-sections .global-attribute-section
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"global-attribute-section":56,"OPEN_BRACKET":57}

item set 7 
namespace-member-declarations -> namespace-member-declaration . 
transitions ->  {}

item set 8 
using-directive -> using-alias-directive . 
transitions ->  {}

item set 9 
using-directive -> using-namespace-directive . 
transitions ->  {}

item set 10 
global-attribute-sections -> global-attribute-section . 
transitions ->  {}

item set 11 
namespace-member-declaration -> namespace-declaration . 
transitions ->  {}

item set 12 
namespace-member-declaration -> type-declaration . 
transitions ->  {}

item set 13 
using-alias-directive -> USING .IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> USING .namespace-name SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":58,"namespace-name":59,"IDENTIFIER":60,"namespace-or-type-name":61,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77}

item set 14 
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
global-attribute-target-specifier -> .global-attribute-target COLON
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
global-attribute-target -> .ASSEMBLY
global-attribute-target -> .MODULE
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"global-attribute-target-specifier":78,"attribute-list":79,"attribute-target-specifier":80,"global-attribute-target":81,"attribute":82,"attribute-target":83,"ASSEMBLY":84,"MODULE":85,"attribute-name":86,"FIELD":87,"EVENT":88,"METHOD":89,"PARAM":90,"PROPERTY":91,"RETURN":92,"TYPE":93,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 15 
namespace-declaration -> NAMESPACE .namespace-or-type-name namespace-body
namespace-declaration -> NAMESPACE .namespace-or-type-name namespace-body SEMICOLON
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"namespace-or-type-name":97,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 16 
type-declaration -> class-declaration . 
transitions ->  {}

item set 17 
type-declaration -> struct-declaration . 
transitions ->  {}

item set 18 
type-declaration -> interface-declaration . 
transitions ->  {}

item set 19 
type-declaration -> enum-declaration . 
transitions ->  {}

item set 20 
type-declaration -> delegate-declaration . 
transitions ->  {}

item set 21 
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":98,"IDENTIFIER":60}

item set 22 
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":99,"modifiers":100,"STRUCT":101,"INTERFACE":102,"ENUM":103,"DELEGATE":104,"modifier":29,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 23 
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":105,"STRUCT":106,"INTERFACE":107,"ENUM":108,"DELEGATE":109,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 24 
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":111,"IDENTIFIER":60}

item set 25 
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":112,"IDENTIFIER":60}

item set 26 
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":113,"IDENTIFIER":60}

item set 27 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":114,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 28 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":135,"OPEN_BRACKET":53}

item set 29 
modifiers -> modifier . 
transitions ->  {}

item set 30 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 31 
modifier -> UNSAFE . 
transitions ->  {}

item set 32 
modifier -> ASYNC . 
transitions ->  {}

item set 33 
modifier -> PUBLIC . 
transitions ->  {}

item set 34 
modifier -> PARTIAL . 
transitions ->  {}

item set 35 
modifier -> PROTECTED . 
transitions ->  {}

item set 36 
modifier -> INTERNAL . 
transitions ->  {}

item set 37 
modifier -> PRIVATE . 
transitions ->  {}

item set 38 
modifier -> ABSTRACT . 
transitions ->  {}

item set 39 
modifier -> SEALED . 
transitions ->  {}

item set 40 
modifier -> STATIC . 
transitions ->  {}

item set 41 
modifier -> READONLY . 
transitions ->  {}

item set 42 
modifier -> VOLATILE . 
transitions ->  {}

item set 43 
modifier -> VIRTUAL . 
transitions ->  {}

item set 44 
modifier -> OVERRIDE . 
transitions ->  {}

item set 45 
modifier -> EXTERN . 
transitions ->  {}

item set 46 
modifier -> NEW . 
transitions ->  {}

item set 47 
compilationUnit -> using-directives EOF . 
transitions ->  {}

item set 48 
compilationUnit -> using-directives namespace-member-declarations .EOF
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":136,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 49 
compilationUnit -> using-directives global-attributes .EOF
compilationUnit -> using-directives global-attributes .namespace-member-declarations EOF
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":137,"namespace-member-declarations":138,"namespace-member-declaration":7,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 50 
using-directives -> using-directives using-directive . 
transitions ->  {}

item set 51 
compilationUnit -> global-attributes EOF . 
transitions ->  {}

item set 52 
compilationUnit -> global-attributes namespace-member-declarations .EOF
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":139,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 53 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":79,"attribute-target-specifier":80,"attribute":82,"attribute-target":83,"attribute-name":86,"FIELD":87,"EVENT":88,"METHOD":89,"PARAM":90,"PROPERTY":91,"RETURN":92,"TYPE":93,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"ASSEMBLY":70,"MODULE":72,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 54 
compilationUnit -> namespace-member-declarations EOF . 
transitions ->  {}

item set 55 
namespace-member-declarations -> namespace-member-declarations namespace-member-declaration . 
transitions ->  {}

item set 56 
global-attribute-sections -> global-attribute-sections global-attribute-section . 
transitions ->  {}

item set 57 
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
global-attribute-target-specifier -> .global-attribute-target COLON
global-attribute-target -> .ASSEMBLY
global-attribute-target -> .MODULE 
transitions ->  {"global-attribute-target-specifier":78,"global-attribute-target":81,"ASSEMBLY":140,"MODULE":141}

item set 58 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE .ASSIGN namespace-or-type-name SEMICOLON
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":142}

item set 59 
using-namespace-directive -> USING namespace-name .SEMICOLON 
transitions ->  {"SEMICOLON":143}

item set 60 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":144}

item set 61 
namespace-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":145,"DOT":146}

item set 62 
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 63 
IDENTIFIER_WITH_KEYWORD -> ADD . 
transitions ->  {}

item set 64 
IDENTIFIER_WITH_KEYWORD -> REMOVE . 
transitions ->  {}

item set 65 
IDENTIFIER_WITH_KEYWORD -> SET . 
transitions ->  {}

item set 66 
IDENTIFIER_WITH_KEYWORD -> PARAMS . 
transitions ->  {}

item set 67 
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {}

item set 68 
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 69 
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 70 
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 71 
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 72 
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 73 
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 74 
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 75 
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 76 
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 77 
IDENTIFIER_WITH_KEYWORD -> WHERE . 
transitions ->  {}

item set 78 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier .attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":147,"attribute":82,"attribute-name":86,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 79 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":148,"COMMA":149}

item set 80 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":150,"attribute":82,"attribute-name":86,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 81 
global-attribute-target-specifier -> global-attribute-target .COLON 
transitions ->  {"COLON":151}

item set 82 
attribute-list -> attribute . 
transitions ->  {}

item set 83 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":152}

item set 84 
global-attribute-target -> ASSEMBLY .
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 85 
global-attribute-target -> MODULE .
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 86 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":153,"OPEN_PARENS":154}

item set 87 
attribute-target -> FIELD .
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 88 
attribute-target -> EVENT . 
transitions ->  {}

item set 89 
attribute-target -> METHOD .
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 90 
attribute-target -> PARAM .
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 91 
attribute-target -> PROPERTY .
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 92 
attribute-target -> RETURN . 
transitions ->  {}

item set 93 
attribute-target -> TYPE .
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 94 
attribute-name -> type-name . 
transitions ->  {}

item set 95 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":145,"DOT":146}

item set 96 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 97 
namespace-declaration -> NAMESPACE namespace-or-type-name .namespace-body
namespace-declaration -> NAMESPACE namespace-or-type-name .namespace-body SEMICOLON
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD
namespace-body -> .OPEN_BRACE CLOSE_BRACE
namespace-body -> .OPEN_BRACE using-directives CLOSE_BRACE
namespace-body -> .OPEN_BRACE namespace-member-declarations CLOSE_BRACE
namespace-body -> .OPEN_BRACE using-directives namespace-member-declarations CLOSE_BRACE 
transitions ->  {"namespace-body":155,"DOUBLE_COLON":145,"DOT":146,"OPEN_BRACE":156}

item set 98 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":157,"class-base":158,"where-units":159,"COLON":160,"where-unit":161,"WHERE":162}

item set 99 
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":163,"IDENTIFIER":60}

item set 100 
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":164,"STRUCT":165,"INTERFACE":166,"ENUM":167,"DELEGATE":168,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 101 
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":169,"IDENTIFIER":60}

item set 102 
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":170,"IDENTIFIER":60}

item set 103 
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":171,"IDENTIFIER":60}

item set 104 
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":172,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 105 
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":173,"IDENTIFIER":60}

item set 106 
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":174,"IDENTIFIER":60}

item set 107 
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":175,"IDENTIFIER":60}

item set 108 
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":176,"IDENTIFIER":60}

item set 109 
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":177,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 110 
modifiers -> modifiers modifier . 
transitions ->  {}

item set 111 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":178,"struct-interfaces":179,"where-units":159,"COLON":180,"where-unit":161,"WHERE":162}

item set 112 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":181,"interface-base":182,"where-units":159,"COLON":183,"where-unit":161,"WHERE":162}

item set 113 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":184,"enum-base":185,"OPEN_BRACE":186,"COLON":187}

item set 114 
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":188,"IDENTIFIER":60}

item set 115 
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":189,"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 116 
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":193,"STAR":194}

item set 117 
type -> array-type .STARS
type -> array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":195,"STAR":194}

item set 118 
non-array-type -> type-name . 
transitions ->  {}

item set 119 
non-array-type -> SBYTE . 
transitions ->  {}

item set 120 
non-array-type -> BYTE . 
transitions ->  {}

item set 121 
non-array-type -> SHORT . 
transitions ->  {}

item set 122 
non-array-type -> USHORT . 
transitions ->  {}

item set 123 
non-array-type -> INT . 
transitions ->  {}

item set 124 
non-array-type -> UINT . 
transitions ->  {}

item set 125 
non-array-type -> LONG . 
transitions ->  {}

item set 126 
non-array-type -> ULONG . 
transitions ->  {}

item set 127 
non-array-type -> CHAR . 
transitions ->  {}

item set 128 
non-array-type -> FLOAT . 
transitions ->  {}

item set 129 
non-array-type -> DOUBLE . 
transitions ->  {}

item set 130 
non-array-type -> DECIMAL . 
transitions ->  {}

item set 131 
non-array-type -> BOOL . 
transitions ->  {}

item set 132 
non-array-type -> OBJECT . 
transitions ->  {}

item set 133 
non-array-type -> STRING . 
transitions ->  {}

item set 134 
non-array-type -> VOID . 
transitions ->  {}

item set 135 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 136 
compilationUnit -> using-directives namespace-member-declarations EOF . 
transitions ->  {}

item set 137 
compilationUnit -> using-directives global-attributes EOF . 
transitions ->  {}

item set 138 
compilationUnit -> using-directives global-attributes namespace-member-declarations .EOF
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":196,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 139 
compilationUnit -> global-attributes namespace-member-declarations EOF . 
transitions ->  {}

item set 140 
global-attribute-target -> ASSEMBLY . 
transitions ->  {}

item set 141 
global-attribute-target -> MODULE . 
transitions ->  {}

item set 142 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN .namespace-or-type-name SEMICOLON
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"namespace-or-type-name":197,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 143 
using-namespace-directive -> USING namespace-name SEMICOLON . 
transitions ->  {}

item set 144 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 145 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":198,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 146 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":199,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 147 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list .CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":200,"COMMA":201}

item set 148 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 149 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":202,"attribute":203,"attribute-name":86,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 150 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":204,"COMMA":205}

item set 151 
global-attribute-target-specifier -> global-attribute-target COLON . 
transitions ->  {}

item set 152 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 153 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 154 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":206,"positional-argument-list":207,"named-argument-list":208,"positional-argument":209,"named-argument":210,"attribute-argument-expression":211,"IDENTIFIER_WITH_TEMPLATE":212,"expression":213,"IDENTIFIER":60,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 155 
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body .
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body .SEMICOLON 
transitions ->  {"SEMICOLON":282}

item set 156 
namespace-body -> OPEN_BRACE .CLOSE_BRACE
namespace-body -> OPEN_BRACE .using-directives CLOSE_BRACE
namespace-body -> OPEN_BRACE .namespace-member-declarations CLOSE_BRACE
namespace-body -> OPEN_BRACE .using-directives namespace-member-declarations CLOSE_BRACE
using-directives -> .using-directive
using-directives -> .using-directives using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":283,"using-directives":284,"namespace-member-declarations":285,"using-directive":5,"namespace-member-declaration":7,"using-alias-directive":8,"using-namespace-directive":9,"namespace-declaration":11,"type-declaration":12,"USING":13,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 157 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":286,"OPEN_BRACE":287}

item set 158 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":288,"where-units":159,"where-unit":161,"WHERE":162}

item set 159 
where-base -> where-units .COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> where-units .
where-units -> where-units .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"COMMA":289,"where-unit":290,"WHERE":162}

item set 160 
class-base -> COLON .type-with-interr
class-base -> COLON .interface-type-list
class-base -> COLON .type-with-interr COMMA interface-type-list
type-with-interr -> .type INTERR
type-with-interr -> .type
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":291,"interface-type-list":292,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 161 
where-units -> where-unit . 
transitions ->  {}

item set 162 
where-unit -> WHERE .type-name COLON where-names
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-name":293,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 163 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":294,"class-base":295,"where-units":159,"COLON":160,"where-unit":161,"WHERE":162}

item set 164 
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":296,"IDENTIFIER":60}

item set 165 
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":297,"IDENTIFIER":60}

item set 166 
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":298,"IDENTIFIER":60}

item set 167 
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":299,"IDENTIFIER":60}

item set 168 
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":300,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 169 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":301,"struct-interfaces":302,"where-units":159,"COLON":180,"where-unit":161,"WHERE":162}

item set 170 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":303,"interface-base":304,"where-units":159,"COLON":183,"where-unit":161,"WHERE":162}

item set 171 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":305,"enum-base":306,"OPEN_BRACE":186,"COLON":187}

item set 172 
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":307,"IDENTIFIER":60}

item set 173 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":308,"class-base":309,"where-units":159,"COLON":160,"where-unit":161,"WHERE":162}

item set 174 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":310,"struct-interfaces":311,"where-units":159,"COLON":180,"where-unit":161,"WHERE":162}

item set 175 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":312,"interface-base":313,"where-units":159,"COLON":183,"where-unit":161,"WHERE":162}

item set 176 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":314,"enum-base":315,"OPEN_BRACE":186,"COLON":187}

item set 177 
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":316,"IDENTIFIER":60}

item set 178 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":317,"OPEN_BRACE":318}

item set 179 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":319,"where-units":159,"where-unit":161,"WHERE":162}

item set 180 
struct-interfaces -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":320,"type-with-interr":321,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 181 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":322,"OPEN_BRACE":323}

item set 182 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":324,"where-units":159,"where-unit":161,"WHERE":162}

item set 183 
interface-base -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":325,"type-with-interr":321,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 184 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":326}

item set 185 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":327,"OPEN_BRACE":186}

item set 186 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":328,"enum-member-declarations":329,"enum-member-declaration":330,"IDENTIFIER_WITH_TEMPLATE":331,"attributes":332,"IDENTIFIER":60,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 187 
enum-base -> COLON .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":333,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 188 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":334}

item set 189 
type-with-interr -> type INTERR . 
transitions ->  {}

item set 190 
array-type -> type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifier":335,"OPEN_BRACKET":192}

item set 191 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 192 
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA 
transitions ->  {"dim-separators":336,"CLOSE_BRACKET":337,"COMMA":338}

item set 193 
type -> non-array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":339}

item set 194 
STARS -> STAR . 
transitions ->  {}

item set 195 
type -> array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":339}

item set 196 
compilationUnit -> using-directives global-attributes namespace-member-declarations EOF . 
transitions ->  {}

item set 197 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name .SEMICOLON
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":340,"DOUBLE_COLON":145,"DOT":146}

item set 198 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 199 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 200 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 201 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":341,"attribute":203,"attribute-name":86,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 202 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 203 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 204 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 205 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":342,"attribute":203,"attribute-name":86,"type-name":94,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 206 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 207 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":343,"COMMA":344}

item set 208 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":345,"COMMA":346}

item set 209 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 210 
named-argument-list -> named-argument . 
transitions ->  {}

item set 211 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 212 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":347,"DOUBLE_COLON":348}

item set 213 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 214 
expression -> conditional-expression . 
transitions ->  {}

item set 215 
expression -> assignment . 
transitions ->  {}

item set 216 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":349,"OP_OR":350}

item set 217 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":351,"ASSIGN":352,"OP_ADD_ASSIGNMENT":353,"OP_SUB_ASSIGNMENT":354,"OP_MULT_ASSIGNMENT":355,"OP_DIV_ASSIGNMENT":356,"OP_MOD_ASSIGNMENT":357,"OP_AND_ASSIGNMENT":358,"OP_OR_ASSIGNMENT":359,"OP_XOR_ASSIGNMENT":360,"OP_LEFT_SHIFT_ASSIGNMENT":361,"RIGHT_SHIFT_ASSIGNMENT":362}

item set 218 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":363}

item set 219 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 220 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 221 
unary-expression -> PLUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":364,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 222 
unary-expression -> OP_PTR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":366,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 223 
unary-expression -> OP_COALESCING .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":367,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 224 
unary-expression -> MINUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":368,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 225 
unary-expression -> BANG .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":369,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 226 
unary-expression -> TILDE .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":370,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 227 
unary-expression -> STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":371,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 228 
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"DOT":372,"OP_PTR":373,"OP_INC":374,"OP_DEC":375,"OPEN_PARENS":376}

item set 229 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":377}

item set 230 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":378,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 231 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":379,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 232 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":380}

item set 233 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 234 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":381}

item set 235 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 236 
primary-no-array-creation-expression -> lambda-expression . 
transitions ->  {}

item set 237 
primary-no-array-creation-expression -> cast-expression . 
transitions ->  {}

item set 238 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 239 
primary-no-array-creation-expression -> double-colon-access . 
transitions ->  {}

item set 240 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 241 
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions .DOT invocation-expression 
transitions ->  {"DOT":382,"OP_PTR":383}

item set 242 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 243 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 244 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 245 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 246 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 247 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 248 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 249 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 250 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 251 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 252 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 253 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":384}

item set 254 
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":385,"OPEN_PARENS":386,"OPEN_BRACE":387}

item set 255 
primary-no-array-creation-expression -> delegate-expression . 
transitions ->  {}

item set 256 
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> STACKALLOC .array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"non-array-type":388,"array-type":389,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"type":390,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 257 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":391}

item set 258 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 259 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 260 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 261 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 262 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 263 
literal -> NULL . 
transitions ->  {}

item set 264 
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> OPEN_PARENS .type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS expression
cast-expression -> OPEN_PARENS .type-with-interr CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
dbl-expression-list -> .dbl-expression-list COMMA expression expression
dbl-expression-list -> .expression expression
type-expression-list -> .type-expression-list COMMA type expression
type-expression-list -> .type expression
expression-list -> .expression
expression-list -> .expression-list COMMA expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
expression -> .conditional-expression
expression -> .assignment
type-with-interr -> .type INTERR
type-with-interr -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
type-name -> .namespace-or-type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"dbl-expression-list":392,"type-expression-list":393,"expression-list":394,"type":395,"expression":396,"type-with-interr":397,"non-array-type":116,"array-type":117,"conditional-expression":214,"assignment":215,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"conditional-or-expression":216,"unary-expression":217,"namespace-or-type-name":95,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"IDENTIFIER_WITH_KEYWORD":253,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"IDENTIFIER":60,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"invocation-expression":266,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"equality-expression":274,"TRUE":275,"FALSE":276,"AWAIT":277,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281}

item set 265 
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"DOT":398,"OP_PTR":399,"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 266 
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 267 
this-access -> THIS .
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 268 
base-access -> BASE .DOT IDENTIFIER_WITH_TEMPLATE
base-access -> BASE .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":400,"OPEN_BRACKET":401}

item set 269 
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":402,"type-with-identifier":403,"non-array-type":404,"rank-specifiers":405,"block-expression-with-brace":406,"array-type":117,"IDENTIFIER":407,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"rank-specifier":191,"OPEN_BRACE":408,"namespace-or-type-name":95,"OPEN_BRACKET":192,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77}

item set 270 
typeof-expression -> TYPEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":409}

item set 271 
sizeof-expression -> SIZEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":410}

item set 272 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":411}

item set 273 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":412}

item set 274 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":413,"OP_NE":414}

item set 275 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 276 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 277 
invocation-expression -> AWAIT .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"primary-expression":415,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 278 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":416,"GT":417,"OP_LE":418,"OP_GE":419,"OP_COALESCING":420,"IS":421,"AS":422}

item set 279 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 280 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":425,"OP_PTR":426,"OP_COALESCING":427,"MINUS":428}

item set 281 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":429,"DIV":430,"PERCENT":431}

item set 282 
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body SEMICOLON . 
transitions ->  {}

item set 283 
namespace-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 284 
namespace-body -> OPEN_BRACE using-directives .CLOSE_BRACE
namespace-body -> OPEN_BRACE using-directives .namespace-member-declarations CLOSE_BRACE
using-directives -> using-directives .using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":432,"namespace-member-declarations":433,"using-directive":50,"namespace-member-declaration":7,"using-alias-directive":8,"using-namespace-directive":9,"namespace-declaration":11,"type-declaration":12,"USING":13,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 285 
namespace-body -> OPEN_BRACE namespace-member-declarations .CLOSE_BRACE
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":434,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 286 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":435}

item set 287 
class-body -> OPEN_BRACE .CLOSE_BRACE
class-body -> OPEN_BRACE .class-member-declarations CLOSE_BRACE
class-member-declarations -> .class-member-declaration
class-member-declarations -> .class-member-declarations class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":436,"class-member-declarations":437,"class-member-declaration":438,"constant-declaration":439,"method-declaration":440,"field-declaration":441,"property-declaration":442,"event-declaration":443,"indexer-declaration":444,"operator-declaration":445,"constructor-declaration":446,"static-constructor-declaration":447,"destructor-declaration":448,"type-declaration":449,"CONST":450,"attributes":451,"modifiers":452,"method-header":453,"type-with-interr":454,"EVENT":455,"indexer-declarator":456,"constructor-declarator":457,"TILDE":458,"EXTERN":459,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"attribute-sections":28,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"CLASS":21,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-section":30,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 288 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":462,"OPEN_BRACE":287}

item set 289 
where-base -> where-units COMMA .NEW OPEN_PARENS CLOSE_PARENS 
transitions ->  {"NEW":463}

item set 290 
where-units -> where-units where-unit . 
transitions ->  {}

item set 291 
class-base -> COLON type-with-interr .
class-base -> COLON type-with-interr .COMMA interface-type-list
interface-type-list -> type-with-interr . 
transitions ->  {"COMMA":464}

item set 292 
class-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":465}

item set 293 
where-unit -> WHERE type-name .COLON where-names 
transitions ->  {"COLON":466}

item set 294 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":467,"OPEN_BRACE":287}

item set 295 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":468,"where-units":159,"where-unit":161,"WHERE":162}

item set 296 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":469,"class-base":470,"where-units":159,"COLON":160,"where-unit":161,"WHERE":162}

item set 297 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":471,"struct-interfaces":472,"where-units":159,"COLON":180,"where-unit":161,"WHERE":162}

item set 298 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":473,"interface-base":474,"where-units":159,"COLON":183,"where-unit":161,"WHERE":162}

item set 299 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":475,"enum-base":476,"OPEN_BRACE":186,"COLON":187}

item set 300 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":477,"IDENTIFIER":60}

item set 301 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":478,"OPEN_BRACE":318}

item set 302 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":479,"where-units":159,"where-unit":161,"WHERE":162}

item set 303 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":480,"OPEN_BRACE":323}

item set 304 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":481,"where-units":159,"where-unit":161,"WHERE":162}

item set 305 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":482}

item set 306 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":483,"OPEN_BRACE":186}

item set 307 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":484}

item set 308 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":485,"OPEN_BRACE":287}

item set 309 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":486,"where-units":159,"where-unit":161,"WHERE":162}

item set 310 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":487,"OPEN_BRACE":318}

item set 311 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":488,"where-units":159,"where-unit":161,"WHERE":162}

item set 312 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":489,"OPEN_BRACE":323}

item set 313 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":490,"where-units":159,"where-unit":161,"WHERE":162}

item set 314 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":491}

item set 315 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":492,"OPEN_BRACE":186}

item set 316 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":493}

item set 317 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":494}

item set 318 
struct-body -> OPEN_BRACE .CLOSE_BRACE
struct-body -> OPEN_BRACE .struct-member-declarations CLOSE_BRACE
struct-member-declarations -> .struct-member-declaration
struct-member-declarations -> .struct-member-declarations struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":495,"struct-member-declarations":496,"struct-member-declaration":497,"constant-declaration":498,"field-declaration":499,"method-declaration":500,"property-declaration":501,"event-declaration":502,"indexer-declaration":503,"operator-declaration":504,"constructor-declaration":505,"static-constructor-declaration":506,"type-declaration":507,"CONST":450,"attributes":508,"modifiers":452,"type-with-interr":454,"method-header":453,"EVENT":455,"indexer-declarator":456,"constructor-declarator":457,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"attribute-sections":28,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"CLASS":21,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-section":30,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 319 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":509,"OPEN_BRACE":318}

item set 320 
struct-interfaces -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":465}

item set 321 
interface-type-list -> type-with-interr . 
transitions ->  {}

item set 322 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":510}

item set 323 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":511,"interface-member-declarations":512,"interface-member-declaration":513,"interface-method-declaration":514,"interface-property-declaration":515,"interface-event-declaration":516,"interface-indexer-declaration":517,"type-with-interr":518,"attributes":519,"NEW":520,"EVENT":521,"type":115,"attribute-sections":28,"non-array-type":116,"array-type":117,"attribute-section":30,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"OPEN_BRACKET":53,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 324 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":522,"OPEN_BRACE":323}

item set 325 
interface-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":465}

item set 326 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 327 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":523}

item set 328 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 329 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":524,"COMMA":525}

item set 330 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 331 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":526}

item set 332 
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":527,"IDENTIFIER":60}

item set 333 
enum-base -> COLON type-with-interr . 
transitions ->  {}

item set 334 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":528,"formal-parameter-list":529,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 335 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 336 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":540,"COMMA":541}

item set 337 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 338 
dim-separators -> COMMA . 
transitions ->  {}

item set 339 
STARS -> STARS STAR . 
transitions ->  {}

item set 340 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON . 
transitions ->  {}

item set 341 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 342 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 343 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 344 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":542,"positional-argument":543,"named-argument":210,"attribute-argument-expression":211,"IDENTIFIER_WITH_TEMPLATE":212,"expression":213,"IDENTIFIER":60,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 345 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 346 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"named-argument":544,"IDENTIFIER_WITH_TEMPLATE":545,"IDENTIFIER":60}

item set 347 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":546,"expression":213,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 348 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-access":547,"invocation-expressions":241,"primary-expression":548,"type":265,"invocation-expression":266,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"AWAIT":277,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"namespace-or-type-name":95,"TRUE":275,"FALSE":276,"IDENTIFIER":60}

item set 349 
conditional-expression -> conditional-or-expression INTERR .expression
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":549,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 350 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"conditional-and-expression":550,"inclusive-or-expression":229,"exclusive-or-expression":234,"and-expression":257,"equality-expression":274,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 351 
assignment -> unary-expression assignment-operator .expression
assignment -> unary-expression assignment-operator .block-expression-with-brace
expression -> .conditional-expression
expression -> .assignment
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":552,"block-expression-with-brace":553,"conditional-expression":214,"assignment":215,"OPEN_BRACE":408,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 352 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 353 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 354 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 355 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 356 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 357 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 358 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 359 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 360 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 361 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 362 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 363 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"inclusive-or-expression":554,"exclusive-or-expression":234,"and-expression":257,"equality-expression":274,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 364 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 365 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"DOUBLE_COLON":348}

item set 366 
unary-expression -> OP_PTR unary-expression . 
transitions ->  {}

item set 367 
unary-expression -> OP_COALESCING unary-expression . 
transitions ->  {}

item set 368 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 369 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 370 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 371 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 372 
member-access -> primary-expression DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":555,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 373 
member-access -> primary-expression OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":556,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 374 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 375 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 376 
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":557,"argument-list":558,"CLOSE_PARENS":559,"non-array-type":116,"array-type":117,"argument":560,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"expression":561,"REF":562,"OUT":563,"namespace-or-type-name":95,"conditional-expression":214,"assignment":215,"IDENTIFIER_WITH_KEYWORD":253,"conditional-or-expression":216,"unary-expression":217,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"IDENTIFIER":60,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"invocation-expression":266,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"equality-expression":274,"TRUE":275,"FALSE":276,"AWAIT":277,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281}

item set 377 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"exclusive-or-expression":564,"and-expression":257,"equality-expression":274,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 378 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 379 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 380 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":565,"dim-separators":566,"CLOSE_BRACKET":567,"expression":568,"COMMA":338,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 381 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"and-expression":569,"equality-expression":274,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 382 
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions DOT .invocation-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":570,"invocation-expression":571,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"AWAIT":277,"primary-expression":548,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"type":265,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"TRUE":275,"FALSE":276,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 383 
member-access -> invocation-expressions OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":572,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 384 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":573,"block":574,"conditional-expression":214,"assignment":215,"OPEN_BRACE":387,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 385 
primary-no-array-creation-expression -> DELEGATE block . 
transitions ->  {}

item set 386 
delegate-expression -> DELEGATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE OPEN_PARENS .CLOSE_PARENS block
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":575,"CLOSE_PARENS":576,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 387 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":577,"statement-list":578,"statement":579,"labeled-statement":580,"declaration-statement":581,"embedded-statement":582,"IDENTIFIER_WITH_KEYWORD":583,"local-variable-declaration":584,"local-constant-declaration":585,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":461,"WHERE":77,"primary-expression":599,"type":600,"CONST":601,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expression":266,"NEW":629,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"BASE":268,"TYPEOF":270,"SIZEOF":271,"namespace-or-type-name":95,"TRUE":275,"FALSE":276}

item set 388 
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"OPEN_BRACKET":643,"STARS":193,"STAR":194}

item set 389 
array-creation-expression -> STACKALLOC array-type .array-initializer
type -> array-type .STARS
type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"array-initializer":644,"STARS":195,"OPEN_BRACE":645,"STAR":194}

item set 390 
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 391 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"equality-expression":646,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 392 
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR block
dbl-expression-list -> dbl-expression-list .COMMA expression expression 
transitions ->  {"CLOSE_PARENS":647,"COMMA":648}

item set 393 
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR block
type-expression-list -> type-expression-list .COMMA type expression 
transitions ->  {"CLOSE_PARENS":649,"COMMA":650}

item set 394 
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR block
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_PARENS":651,"COMMA":652}

item set 395 
cast-expression -> OPEN_PARENS type .expression CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type .expression
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":653,"INTERR":189,"rank-specifiers":190,"DOT":398,"OP_PTR":654,"conditional-expression":214,"assignment":215,"rank-specifier":191,"conditional-or-expression":216,"unary-expression":217,"OPEN_BRACKET":192,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 396 
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS
dbl-expression-list -> expression .expression
expression-list -> expression .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":655,"expression":656,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 397 
cast-expression -> OPEN_PARENS type-with-interr .CLOSE_PARENS expression 
transitions ->  {"CLOSE_PARENS":657}

item set 398 
member-access -> type DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":658,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 399 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":659,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 400 
base-access -> BASE DOT .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":660,"IDENTIFIER":60}

item set 401 
base-access -> BASE OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":661,"expression":568,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 402 
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW type .block-expression-with-brace
array-type -> type .rank-specifiers
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":662,"block-expression-with-brace":663,"rank-specifiers":190,"OPEN_BRACE":408,"rank-specifier":191,"OPEN_BRACKET":192}

item set 403 
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":664,"block-expression-with-brace":665,"rank-specifiers":666,"OPEN_BRACKET":667,"OPEN_BRACE":408,"rank-specifier":191}

item set 404 
object-creation-expression -> NEW non-array-type .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET
type -> non-array-type .STARS
type -> non-array-type .
type-with-identifier -> non-array-type .
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
STARS -> .STARS STAR
STARS -> .STAR
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":668,"OPEN_BRACKET":669,"STARS":193,"rank-specifier":191,"STAR":194}

item set 405 
object-creation-expression -> NEW rank-specifiers .block-expression-with-brace
object-creation-expression -> NEW rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":670,"rank-specifier":335,"OPEN_BRACE":408,"OPEN_BRACKET":192}

item set 406 
object-creation-expression -> NEW block-expression-with-brace . 
transitions ->  {}

item set 407 
type-with-identifier -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":671}

item set 408 
block-expression-with-brace -> OPEN_BRACE .block-expression-list CLOSE_BRACE
block-expression-list -> .block-expression-list COMMA block-expression-list-unit
block-expression-list -> .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list":672,"block-expression-list-unit":673,"block-expression-with-brace":674,"expression":675,"OPEN_BRACE":408,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 409 
typeof-expression -> TYPEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":676,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 410 
sizeof-expression -> SIZEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":677,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 411 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":678,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 412 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":679,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 413 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":680,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 414 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":681,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 415 
invocation-expression -> AWAIT primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS CLOSE_PARENS
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":682,"DOT":372,"OP_PTR":373,"OP_INC":374,"OP_DEC":375}

item set 416 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":683,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 417 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":684,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 418 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":685,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 419 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":686,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 420 
relational-expression -> relational-expression OP_COALESCING .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":687,"additive-expression":280,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 421 
relational-expression -> relational-expression IS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":688,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 422 
relational-expression -> relational-expression AS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":689,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 423 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":690,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 424 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":691,"multiplicative-expression":281,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 425 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":692,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 426 
additive-expression -> additive-expression OP_PTR .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":693,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 427 
additive-expression -> additive-expression OP_COALESCING .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":694,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 428 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":695,"unary-expression":551,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 429 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":696,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 430 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":697,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 431 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":698,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 432 
namespace-body -> OPEN_BRACE using-directives CLOSE_BRACE . 
transitions ->  {}

item set 433 
namespace-body -> OPEN_BRACE using-directives namespace-member-declarations .CLOSE_BRACE
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":699,"namespace-member-declaration":55,"namespace-declaration":11,"type-declaration":12,"NAMESPACE":15,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"CLASS":21,"attributes":22,"modifiers":23,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 434 
namespace-body -> OPEN_BRACE namespace-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 435 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 436 
class-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 437 
class-body -> OPEN_BRACE class-member-declarations .CLOSE_BRACE
class-member-declarations -> class-member-declarations .class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":700,"class-member-declaration":701,"constant-declaration":439,"method-declaration":440,"field-declaration":441,"property-declaration":442,"event-declaration":443,"indexer-declaration":444,"operator-declaration":445,"constructor-declaration":446,"static-constructor-declaration":447,"destructor-declaration":448,"type-declaration":449,"CONST":450,"attributes":451,"modifiers":452,"method-header":453,"type-with-interr":454,"EVENT":455,"indexer-declarator":456,"constructor-declarator":457,"TILDE":458,"EXTERN":459,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"attribute-sections":28,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"CLASS":21,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-section":30,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 438 
class-member-declarations -> class-member-declaration . 
transitions ->  {}

item set 439 
class-member-declaration -> constant-declaration . 
transitions ->  {}

item set 440 
class-member-declaration -> method-declaration . 
transitions ->  {}

item set 441 
class-member-declaration -> field-declaration . 
transitions ->  {}

item set 442 
class-member-declaration -> property-declaration . 
transitions ->  {}

item set 443 
class-member-declaration -> event-declaration . 
transitions ->  {}

item set 444 
class-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 445 
class-member-declaration -> operator-declaration . 
transitions ->  {}

item set 446 
class-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 447 
class-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 448 
class-member-declaration -> destructor-declaration . 
transitions ->  {}

item set 449 
class-member-declaration -> type-declaration . 
transitions ->  {}

item set 450 
constant-declaration -> CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":702,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 451 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":703,"modifiers":704,"type-with-interr":705,"EVENT":706,"indexer-declarator":707,"constructor-declarator":708,"TILDE":709,"EXTERN":710,"CLASS":99,"STRUCT":101,"INTERFACE":102,"ENUM":103,"DELEGATE":104,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 452 
constant-declaration -> modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> modifiers .type-with-interr member-name SEMICOLON
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifiers -> modifiers .modifier
method-header -> modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":711,"type-with-interr":712,"EVENT":713,"indexer-declarator":714,"operator-declarator":715,"constructor-declarator":716,"IDENTIFIER_WITH_TEMPLATE":717,"modifier":110,"CLASS":105,"STRUCT":106,"INTERFACE":107,"ENUM":108,"DELEGATE":109,"type":115,"unary-operator-declarator":718,"binary-operator-declarator":719,"conversion-operator-declarator":720,"IDENTIFIER":60,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"non-array-type":116,"array-type":117,"IMPLICIT":721,"EXPLICIT":722,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 453 
method-declaration -> method-header .block
method-declaration -> method-header .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":723,"SEMICOLON":724,"OPEN_BRACE":387}

item set 454 
field-declaration -> type-with-interr .member-name SEMICOLON
property-declaration -> type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":725,"THIS":726,"variable-declarators":727,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 455 
event-declaration -> EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":730,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 456 
indexer-declaration -> indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":731}

item set 457 
constructor-declaration -> constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":732,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 458 
destructor-declaration -> TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":735,"IDENTIFIER":60}

item set 459 
destructor-declaration -> EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":736}

item set 460 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":737}

item set 461 
modifier -> ASYNC .
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 462 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":738}

item set 463 
where-base -> where-units COMMA NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":739}

item set 464 
class-base -> COLON type-with-interr COMMA .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":740,"type-with-interr":321,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 465 
interface-type-list -> interface-type-list COMMA .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":741,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 466 
where-unit -> WHERE type-name COLON .where-names
where-names -> .where-names COMMA where-name
where-names -> .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-names":742,"where-name":743,"type-name":744,"type":745,"CLASS":746,"STRUCT":747,"NEW":748,"namespace-or-type-name":95,"non-array-type":116,"array-type":117,"IDENTIFIER_WITH_KEYWORD":62,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 467 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":749}

item set 468 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":750,"OPEN_BRACE":287}

item set 469 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":751,"OPEN_BRACE":287}

item set 470 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":752,"where-units":159,"where-unit":161,"WHERE":162}

item set 471 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":753,"OPEN_BRACE":318}

item set 472 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":754,"where-units":159,"where-unit":161,"WHERE":162}

item set 473 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":755,"OPEN_BRACE":323}

item set 474 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":756,"where-units":159,"where-unit":161,"WHERE":162}

item set 475 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":757}

item set 476 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":758,"OPEN_BRACE":186}

item set 477 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":759}

item set 478 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":760}

item set 479 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":761,"OPEN_BRACE":318}

item set 480 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":762}

item set 481 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":763,"OPEN_BRACE":323}

item set 482 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 483 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":764}

item set 484 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":765,"formal-parameter-list":766,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 485 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":767}

item set 486 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":768,"OPEN_BRACE":287}

item set 487 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":769}

item set 488 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":770,"OPEN_BRACE":318}

item set 489 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":771}

item set 490 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":772,"OPEN_BRACE":323}

item set 491 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 492 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":773}

item set 493 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":774,"formal-parameter-list":775,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 494 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 495 
struct-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 496 
struct-body -> OPEN_BRACE struct-member-declarations .CLOSE_BRACE
struct-member-declarations -> struct-member-declarations .struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":776,"struct-member-declaration":777,"constant-declaration":498,"field-declaration":499,"method-declaration":500,"property-declaration":501,"event-declaration":502,"indexer-declaration":503,"operator-declaration":504,"constructor-declaration":505,"static-constructor-declaration":506,"type-declaration":507,"CONST":450,"attributes":508,"modifiers":452,"type-with-interr":454,"method-header":453,"EVENT":455,"indexer-declarator":456,"constructor-declarator":457,"class-declaration":16,"struct-declaration":17,"interface-declaration":18,"enum-declaration":19,"delegate-declaration":20,"attribute-sections":28,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"CLASS":21,"STRUCT":24,"INTERFACE":25,"ENUM":26,"DELEGATE":27,"attribute-section":30,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 497 
struct-member-declarations -> struct-member-declaration . 
transitions ->  {}

item set 498 
struct-member-declaration -> constant-declaration . 
transitions ->  {}

item set 499 
struct-member-declaration -> field-declaration . 
transitions ->  {}

item set 500 
struct-member-declaration -> method-declaration . 
transitions ->  {}

item set 501 
struct-member-declaration -> property-declaration . 
transitions ->  {}

item set 502 
struct-member-declaration -> event-declaration . 
transitions ->  {}

item set 503 
struct-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 504 
struct-member-declaration -> operator-declaration . 
transitions ->  {}

item set 505 
struct-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 506 
struct-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 507 
struct-member-declaration -> type-declaration . 
transitions ->  {}

item set 508 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":703,"modifiers":704,"type-with-interr":705,"EVENT":706,"indexer-declarator":707,"constructor-declarator":708,"CLASS":99,"STRUCT":101,"INTERFACE":102,"ENUM":103,"DELEGATE":104,"modifier":29,"type":115,"IDENTIFIER_WITH_TEMPLATE":460,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"non-array-type":116,"array-type":117,"IDENTIFIER":60,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 509 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":778}

item set 510 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 511 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 512 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":779,"interface-member-declaration":780,"interface-method-declaration":514,"interface-property-declaration":515,"interface-event-declaration":516,"interface-indexer-declaration":517,"type-with-interr":518,"attributes":519,"NEW":520,"EVENT":521,"type":115,"attribute-sections":28,"non-array-type":116,"array-type":117,"attribute-section":30,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"OPEN_BRACKET":53,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 513 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 514 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 515 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 516 
interface-member-declaration -> interface-event-declaration . 
transitions ->  {}

item set 517 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 518 
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":781,"THIS":782,"IDENTIFIER":60}

item set 519 
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> attributes .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":783,"NEW":784,"EVENT":785,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 520 
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":786,"EVENT":787,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 521 
interface-event-declaration -> EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":788,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 522 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":789}

item set 523 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 524 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 525 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":790,"enum-member-declaration":791,"IDENTIFIER_WITH_TEMPLATE":331,"attributes":332,"IDENTIFIER":60,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 526 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":792,"expression":793,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 527 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":794}

item set 528 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":795,"where-units":159,"where-unit":161,"WHERE":162}

item set 529 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":796}

item set 530 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":797}

item set 531 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 532 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 533 
parameter-array -> PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":798,"type":390,"non-array-type":116,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 534 
parameter-array -> attributes .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> attributes .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> attributes .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"PARAMS":799,"type-with-interr":800,"parameter-modifier":801,"type":115,"REF":538,"OUT":539,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 535 
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":802,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 536 
fixed-parameter -> THIS .type-with-interr IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> THIS .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":803,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 537 
fixed-parameter -> parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":804,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 538 
parameter-modifier -> REF . 
transitions ->  {}

item set 539 
parameter-modifier -> OUT . 
transitions ->  {}

item set 540 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 541 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 542 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":805,"COMMA":346}

item set 543 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 544 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 545 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":347}

item set 546 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 547 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access .
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 548 
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC 
transitions ->  {"DOT":372,"OP_PTR":373,"OPEN_PARENS":376,"OP_INC":374,"OP_DEC":375}

item set 549 
conditional-expression -> conditional-or-expression INTERR expression .
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":806}

item set 550 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":363}

item set 551 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 552 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 553 
assignment -> unary-expression assignment-operator block-expression-with-brace . 
transitions ->  {}

item set 554 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":377}

item set 555 
member-access -> primary-expression DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 556 
member-access -> primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 557 
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":807,"rank-specifiers":190,"DOT":398,"OP_PTR":399,"rank-specifier":191,"OPEN_BRACKET":192}

item set 558 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":808,"COLON":809,"COMMA":810}

item set 559 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 560 
argument-list -> argument . 
transitions ->  {}

item set 561 
argument -> expression . 
transitions ->  {}

item set 562 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":811,"expression":812,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 563 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":813,"expression":812,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 564 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":381}

item set 565 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":814,"COMMA":652}

item set 566 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":815,"COMMA":541}

item set 567 
element-access -> primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 568 
expression-list -> expression . 
transitions ->  {}

item set 569 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":391}

item set 570 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":384}

item set 571 
invocation-expressions -> invocation-expressions DOT invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 572 
member-access -> invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 573 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression . 
transitions ->  {}

item set 574 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR block . 
transitions ->  {}

item set 575 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":816}

item set 576 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":817,"OPEN_BRACE":387}

item set 577 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 578 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":818,"statement":819,"labeled-statement":580,"declaration-statement":581,"embedded-statement":582,"IDENTIFIER_WITH_KEYWORD":583,"local-variable-declaration":584,"local-constant-declaration":585,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":461,"WHERE":77,"primary-expression":599,"type":600,"CONST":601,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expression":266,"NEW":629,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"BASE":268,"TYPEOF":270,"SIZEOF":271,"namespace-or-type-name":95,"TRUE":275,"FALSE":276}

item set 579 
statement-list -> statement . 
transitions ->  {}

item set 580 
statement -> labeled-statement . 
transitions ->  {}

item set 581 
statement -> declaration-statement . 
transitions ->  {}

item set 582 
statement -> embedded-statement . 
transitions ->  {}

item set 583 
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON statement
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"COLON":820,"OP_DBLPTR":384}

item set 584 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":821}

item set 585 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":822}

item set 586 
embedded-statement -> block . 
transitions ->  {}

item set 587 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 588 
embedded-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":823}

item set 589 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 590 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 591 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 592 
embedded-statement -> try-statement . 
transitions ->  {}

item set 593 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 594 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 595 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 596 
embedded-statement -> using-statement . 
transitions ->  {}

item set 597 
embedded-statement -> unsafe-statement . 
transitions ->  {}

item set 598 
embedded-statement -> fixed-statement . 
transitions ->  {}

item set 599 
local-variable-declaration -> primary-expression .local-variable-declarators
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":824,"OP_INC":374,"OP_DEC":375,"OPEN_PARENS":376,"DOT":372,"OP_PTR":373,"local-variable-declarator":825,"local-variable":826,"INTERR":827,"STARS":828,"IDENTIFIER_WITH_KEYWORD":829,"STAR":194,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 600 
local-variable-declaration -> type .local-variable-declarators
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":830,"rank-specifiers":190,"DOT":398,"OP_PTR":399,"local-variable-declarator":825,"rank-specifier":191,"local-variable":826,"OPEN_BRACKET":192,"INTERR":827,"STARS":828,"IDENTIFIER_WITH_KEYWORD":829,"STAR":194,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 601 
local-constant-declaration -> CONST .type constant-declarators
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":831,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 602 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 603 
statement-expression -> invocation-expressions .
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOT":382,"OP_PTR":383}

item set 604 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 605 
statement-expression -> assignment . 
transitions ->  {}

item set 606 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 607 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 608 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 609 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 610 
selection-statement -> if-statement . 
transitions ->  {}

item set 611 
selection-statement -> switch-statement . 
transitions ->  {}

item set 612 
iteration-statement -> while-statement . 
transitions ->  {}

item set 613 
iteration-statement -> do-statement . 
transitions ->  {}

item set 614 
iteration-statement -> for-statement . 
transitions ->  {}

item set 615 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 616 
jump-statement -> break-statement . 
transitions ->  {}

item set 617 
jump-statement -> continue-statement . 
transitions ->  {}

item set 618 
jump-statement -> goto-statement . 
transitions ->  {}

item set 619 
jump-statement -> return-statement . 
transitions ->  {}

item set 620 
jump-statement -> throw-statement . 
transitions ->  {}

item set 621 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":832,"OPEN_BRACE":387}

item set 622 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":833,"OPEN_PARENS":411,"OPEN_BRACE":387}

item set 623 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":834,"OPEN_PARENS":412,"OPEN_BRACE":387}

item set 624 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":835}

item set 625 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":836}

item set 626 
unsafe-statement -> UNSAFE .block
modifier -> UNSAFE .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":837,"OPEN_BRACE":387}

item set 627 
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"FIXED":838,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 628 
fixed-statement -> FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":839}

item set 629 
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
modifier -> NEW .
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
array-type -> .type rank-specifiers
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-identifier":403,"non-array-type":404,"rank-specifiers":405,"block-expression-with-brace":406,"type":402,"IDENTIFIER":407,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"rank-specifier":191,"OPEN_BRACE":408,"array-type":117,"namespace-or-type-name":95,"OPEN_BRACKET":192,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77}

item set 630 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":351,"ASSIGN":352,"OP_ADD_ASSIGNMENT":353,"OP_SUB_ASSIGNMENT":354,"OP_MULT_ASSIGNMENT":355,"OP_DIV_ASSIGNMENT":356,"OP_MOD_ASSIGNMENT":357,"OP_AND_ASSIGNMENT":358,"OP_OR_ASSIGNMENT":359,"OP_XOR_ASSIGNMENT":360,"OP_LEFT_SHIFT_ASSIGNMENT":361,"RIGHT_SHIFT_ASSIGNMENT":362}

item set 631 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":840}

item set 632 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":841}

item set 633 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":842}

item set 634 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":843,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 635 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":844}

item set 636 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":845}

item set 637 
break-statement -> YIELD .BREAK SEMICOLON
return-statement -> YIELD .RETURN block-expression-with-brace SEMICOLON
return-statement -> YIELD .RETURN expression SEMICOLON
return-statement -> YIELD .RETURN SEMICOLON 
transitions ->  {"BREAK":846,"RETURN":847}

item set 638 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":848}

item set 639 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":849}

item set 640 
goto-statement -> GOTO .IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":850,"CASE":851,"DEFAULT":852,"IDENTIFIER":60}

item set 641 
return-statement -> RETURN .block-expression-with-brace SEMICOLON
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":853,"SEMICOLON":854,"expression":855,"OPEN_BRACE":408,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 642 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":856,"expression":857,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 643 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACKET":858,"expression-list":859,"expression":568,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 644 
array-creation-expression -> STACKALLOC array-type array-initializer . 
transitions ->  {}

item set 645 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":860,"variable-initializer-list":861,"variable-initializer":862,"expression":863,"array-initializer":864,"conditional-expression":214,"assignment":215,"OPEN_BRACE":645,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 646 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":413,"OP_NE":414}

item set 647 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":865}

item set 648 
dbl-expression-list -> dbl-expression-list COMMA .expression expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":866,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 649 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":867}

item set 650 
type-expression-list -> type-expression-list COMMA .type expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":868,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 651 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":869}

item set 652 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":870,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 653 
cast-expression -> OPEN_PARENS type expression .CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type expression . 
transitions ->  {"CLOSE_PARENS":871}

item set 654 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
unary-expression -> OP_PTR .unary-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":872,"unary-expression":366,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"IDENTIFIER":60,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"type":265,"invocation-expression":266,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"TRUE":275,"FALSE":276,"non-array-type":116,"array-type":117,"AWAIT":277,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 655 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .expression
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"OP_DBLPTR":873,"expression":874,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 656 
dbl-expression-list -> expression expression . 
transitions ->  {}

item set 657 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":875,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 658 
member-access -> type DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 659 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 660 
base-access -> BASE DOT IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 661 
base-access -> BASE OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":876,"COMMA":652}

item set 662 
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":877,"CLOSE_PARENS":878,"argument":560,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 663 
delegate-creation-expression -> NEW type block-expression-with-brace . 
transitions ->  {}

item set 664 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":879,"CLOSE_PARENS":880,"argument":560,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 665 
object-creation-expression -> NEW type-with-identifier block-expression-with-brace . 
transitions ->  {}

item set 666 
object-creation-expression -> NEW type-with-identifier rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":881,"rank-specifier":335,"OPEN_BRACE":408,"OPEN_BRACKET":192}

item set 667 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":882,"dim-separators":336,"CLOSE_BRACKET":337,"argument":560,"COMMA":338,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 668 
object-creation-expression -> NEW non-array-type rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":883,"rank-specifier":335,"OPEN_BRACE":408,"OPEN_BRACKET":192}

item set 669 
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":884,"dim-separators":336,"CLOSE_BRACKET":337,"argument":560,"COMMA":338,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 670 
object-creation-expression -> NEW rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 671 
type-with-identifier -> IDENTIFIER TEMPLATE .
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 672 
block-expression-with-brace -> OPEN_BRACE block-expression-list .CLOSE_BRACE
block-expression-list -> block-expression-list .COMMA block-expression-list-unit 
transitions ->  {"CLOSE_BRACE":885,"COMMA":886}

item set 673 
block-expression-list -> block-expression-list-unit . 
transitions ->  {}

item set 674 
block-expression-list-unit -> block-expression-with-brace . 
transitions ->  {}

item set 675 
block-expression-list-unit -> expression . 
transitions ->  {}

item set 676 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":887}

item set 677 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":888}

item set 678 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":889}

item set 679 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":890}

item set 680 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":416,"GT":417,"OP_LE":418,"OP_GE":419,"OP_COALESCING":420,"IS":421,"AS":422}

item set 681 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":416,"GT":417,"OP_LE":418,"OP_GE":419,"OP_COALESCING":420,"IS":421,"AS":422}

item set 682 
invocation-expression -> AWAIT primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":891,"argument-list":892,"CLOSE_PARENS":893,"non-array-type":116,"array-type":117,"argument":560,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"expression":561,"REF":562,"OUT":563,"namespace-or-type-name":95,"conditional-expression":214,"assignment":215,"IDENTIFIER_WITH_KEYWORD":253,"conditional-or-expression":216,"unary-expression":217,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"IDENTIFIER":60,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"invocation-expression":266,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"equality-expression":274,"TRUE":275,"FALSE":276,"AWAIT":277,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281}

item set 683 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 684 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 685 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 686 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 687 
relational-expression -> relational-expression OP_COALESCING shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":423,"RIGHT_SHIFT":424}

item set 688 
relational-expression -> relational-expression IS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 689 
relational-expression -> relational-expression AS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 690 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":425,"OP_PTR":426,"OP_COALESCING":427,"MINUS":428}

item set 691 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":425,"OP_PTR":426,"OP_COALESCING":427,"MINUS":428}

item set 692 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":429,"DIV":430,"PERCENT":431}

item set 693 
additive-expression -> additive-expression OP_PTR multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":429,"DIV":430,"PERCENT":431}

item set 694 
additive-expression -> additive-expression OP_COALESCING multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":429,"DIV":430,"PERCENT":431}

item set 695 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":429,"DIV":430,"PERCENT":431}

item set 696 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 697 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 698 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 699 
namespace-body -> OPEN_BRACE using-directives namespace-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 700 
class-body -> OPEN_BRACE class-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 701 
class-member-declarations -> class-member-declarations class-member-declaration . 
transitions ->  {}

item set 702 
constant-declaration -> CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":894,"constant-declarator":895,"IDENTIFIER_WITH_TEMPLATE":896,"IDENTIFIER":60}

item set 703 
constant-declaration -> attributes CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":897,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 704 
constant-declaration -> attributes modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes modifiers .type-with-interr member-name SEMICOLON
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":898,"type-with-interr":899,"EVENT":900,"indexer-declarator":901,"operator-declarator":902,"constructor-declarator":903,"IDENTIFIER_WITH_TEMPLATE":904,"CLASS":164,"STRUCT":165,"INTERFACE":166,"ENUM":167,"DELEGATE":168,"modifier":110,"type":115,"unary-operator-declarator":718,"binary-operator-declarator":719,"conversion-operator-declarator":720,"IDENTIFIER":60,"UNSAFE":31,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"non-array-type":116,"array-type":117,"IMPLICIT":721,"EXPLICIT":722,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"WHERE":77}

item set 705 
field-declaration -> attributes type-with-interr .member-name SEMICOLON
property-declaration -> attributes type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":905,"THIS":726,"variable-declarators":727,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 706 
event-declaration -> attributes EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":906,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 707 
indexer-declaration -> attributes indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":907}

item set 708 
constructor-declaration -> attributes constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":908,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 709 
destructor-declaration -> attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":909,"IDENTIFIER":60}

item set 710 
destructor-declaration -> attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":910}

item set 711 
constant-declaration -> modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":911,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 712 
field-declaration -> modifiers type-with-interr .member-name SEMICOLON
property-declaration -> modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":912,"THIS":726,"OPERATOR":913,"variable-declarators":727,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 713 
event-declaration -> modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":914,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 714 
indexer-declaration -> modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":915}

item set 715 
operator-declaration -> modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":916,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 716 
constructor-declaration -> modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":917,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 717 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":918}

item set 718 
operator-declarator -> unary-operator-declarator . 
transitions ->  {}

item set 719 
operator-declarator -> binary-operator-declarator . 
transitions ->  {}

item set 720 
operator-declarator -> conversion-operator-declarator . 
transitions ->  {}

item set 721 
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":919}

item set 722 
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":920}

item set 723 
method-declaration -> method-header block . 
transitions ->  {}

item set 724 
method-declaration -> method-header SEMICOLON . 
transitions ->  {}

item set 725 
field-declaration -> type-with-interr member-name .SEMICOLON
property-declaration -> type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":921,"OPEN_BRACE":922,"OPEN_PARENS":923,"OPEN_BRACKET":924}

item set 726 
indexer-declarator -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {"OPEN_BRACKET":925}

item set 727 
member-name -> variable-declarators .
variable-declarators -> variable-declarators .COMMA variable-declarator 
transitions ->  {"COMMA":926}

item set 728 
variable-declarators -> variable-declarator . 
transitions ->  {}

item set 729 
variable-declarator -> type-name .ASSIGN variable-initializer
variable-declarator -> type-name . 
transitions ->  {"ASSIGN":927}

item set 730 
event-declaration -> EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":928,"member-name":929,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 731 
indexer-declaration -> indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":930,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 732 
constructor-declaration -> constructor-declarator method-body . 
transitions ->  {}

item set 733 
method-body -> block . 
transitions ->  {}

item set 734 
method-body -> SEMICOLON . 
transitions ->  {}

item set 735 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":937}

item set 736 
destructor-declaration -> EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":938,"IDENTIFIER":60}

item set 737 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":939,"formal-parameter-list":940,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 738 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 739 
where-base -> where-units COMMA NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":941}

item set 740 
class-base -> COLON type-with-interr COMMA interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":465}

item set 741 
interface-type-list -> interface-type-list COMMA type-with-interr . 
transitions ->  {}

item set 742 
where-unit -> WHERE type-name COLON where-names .
where-names -> where-names .COMMA where-name 
transitions ->  {"COMMA":942}

item set 743 
where-names -> where-name . 
transitions ->  {}

item set 744 
where-name -> type-name .
non-array-type -> type-name . 
transitions ->  {}

item set 745 
where-name -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":190,"rank-specifier":191,"OPEN_BRACKET":192}

item set 746 
where-name -> CLASS . 
transitions ->  {}

item set 747 
where-name -> STRUCT . 
transitions ->  {}

item set 748 
where-name -> NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":943}

item set 749 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 750 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":944}

item set 751 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":945}

item set 752 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":946,"OPEN_BRACE":287}

item set 753 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":947}

item set 754 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":948,"OPEN_BRACE":318}

item set 755 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":949}

item set 756 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":950,"OPEN_BRACE":323}

item set 757 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 758 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":951}

item set 759 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":952,"formal-parameter-list":953,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 760 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 761 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":954}

item set 762 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 763 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":955}

item set 764 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 765 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":956,"where-units":159,"where-unit":161,"WHERE":162}

item set 766 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":957}

item set 767 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 768 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":958}

item set 769 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 770 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":959}

item set 771 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 772 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":960}

item set 773 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 774 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":961,"where-units":159,"where-unit":161,"WHERE":162}

item set 775 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":962}

item set 776 
struct-body -> OPEN_BRACE struct-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 777 
struct-member-declarations -> struct-member-declarations struct-member-declaration . 
transitions ->  {}

item set 778 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 779 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 780 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 781 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":963,"OPEN_BRACE":964}

item set 782 
interface-indexer-declaration -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":965}

item set 783 
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":966,"THIS":967,"IDENTIFIER":60}

item set 784 
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":968,"EVENT":969,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 785 
interface-event-declaration -> attributes EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":970,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 786 
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":971,"THIS":972,"IDENTIFIER":60}

item set 787 
interface-event-declaration -> NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":973,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 788 
interface-event-declaration -> EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":974,"IDENTIFIER":60}

item set 789 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 790 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 791 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 792 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 793 
constant-expression -> expression . 
transitions ->  {}

item set 794 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":975,"expression":793,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 795 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":976}

item set 796 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":977,"where-units":159,"where-unit":161,"WHERE":162}

item set 797 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"parameter-array":978,"fixed-parameter":979,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 798 
parameter-array -> PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":980,"STARS":195,"IDENTIFIER":60,"STAR":194}

item set 799 
parameter-array -> attributes PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":981,"type":390,"non-array-type":116,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 800 
fixed-parameter -> attributes type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":982,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 801 
fixed-parameter -> attributes parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":983,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 802 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":984}

item set 803 
fixed-parameter -> THIS type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":985,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 804 
fixed-parameter -> parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":986,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 805 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 806 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":987,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 807 
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 808 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 809 
argument-list -> argument-list COLON .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":988,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 810 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":989,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 811 
argument -> REF variable-reference . 
transitions ->  {}

item set 812 
variable-reference -> expression . 
transitions ->  {}

item set 813 
argument -> OUT variable-reference . 
transitions ->  {}

item set 814 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 815 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 816 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":990,"OPEN_BRACE":387}

item set 817 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS block . 
transitions ->  {}

item set 818 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 819 
statement-list -> statement-list statement . 
transitions ->  {}

item set 820 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .statement
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"switch-labels":991,"statement":992,"switch-label":993,"labeled-statement":580,"declaration-statement":581,"embedded-statement":582,"CASE":994,"DEFAULT":995,"IDENTIFIER_WITH_KEYWORD":583,"local-variable-declaration":584,"local-constant-declaration":585,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":461,"WHERE":77,"primary-expression":599,"type":600,"CONST":601,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expression":266,"NEW":629,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"BASE":268,"TYPEOF":270,"SIZEOF":271,"namespace-or-type-name":95,"TRUE":275,"FALSE":276}

item set 821 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 822 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 823 
embedded-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 824 
local-variable-declaration -> primary-expression local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":996}

item set 825 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 826 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":997}

item set 827 
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":998,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 828 
local-variable -> STARS .IDENTIFIER_WITH_KEYWORD
STARS -> STARS .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":999,"STAR":339,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 829 
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 830 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":996}

item set 831 
local-constant-declaration -> CONST type .constant-declarators
array-type -> type .rank-specifiers
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1000,"rank-specifiers":190,"constant-declarator":895,"rank-specifier":191,"IDENTIFIER_WITH_TEMPLATE":896,"OPEN_BRACKET":192,"IDENTIFIER":60}

item set 832 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"catch-clauses":1001,"finally-clause":1002,"specific-catch-clauses":1003,"general-catch-clause":1004,"FINALLY":1005,"specific-catch-clause":1006,"CATCH":1007}

item set 833 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 834 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 835 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1008,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 836 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":1009,"local-variable-declaration":1010,"expression":1011,"primary-expression":599,"type":600,"conditional-expression":214,"assignment":215,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"conditional-or-expression":216,"unary-expression":217,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"namespace-or-type-name":95,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"AWAIT":277,"exclusive-or-expression":234,"and-expression":257,"equality-expression":274,"relational-expression":278,"shift-expression":279,"additive-expression":280,"multiplicative-expression":281}

item set 837 
unsafe-statement -> UNSAFE block . 
transitions ->  {}

item set 838 
fixed-statement -> modifiers FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":1012}

item set 839 
fixed-statement -> FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1013,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 840 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1014,"expression":1015,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 841 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1016,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 842 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1017,"expression":1015,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 843 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":1018}

item set 844 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":1019,"for-initializer":1020,"local-variable-declaration":1021,"statement-expression-list":1022,"primary-expression":599,"type":600,"statement-expression":1023,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"invocation-expression":266,"NEW":269,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"namespace-or-type-name":95,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"TRUE":275,"FALSE":276,"IDENTIFIER":60}

item set 845 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1024,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 846 
break-statement -> YIELD BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":1025}

item set 847 
return-statement -> YIELD RETURN .block-expression-with-brace SEMICOLON
return-statement -> YIELD RETURN .expression SEMICOLON
return-statement -> YIELD RETURN .SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":1026,"expression":1027,"SEMICOLON":1028,"OPEN_BRACE":408,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 848 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 849 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 850 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1029}

item set 851 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1030,"expression":793,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 852 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":1031}

item set 853 
return-statement -> RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":1032}

item set 854 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 855 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":1033}

item set 856 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 857 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":1034}

item set 858 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET .argument-list-with-brace
argument-list-with-brace -> .OPEN_BRACE argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE argument-list CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE CLOSE_BRACE 
transitions ->  {"argument-list-with-brace":1035,"OPEN_BRACE":1036}

item set 859 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":1037,"COMMA":652}

item set 860 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 861 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":1038,"COMMA":1039}

item set 862 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 863 
variable-initializer -> expression .
variable-initializer -> expression . 
transitions ->  {}

item set 864 
variable-initializer -> array-initializer .
variable-initializer -> array-initializer . 
transitions ->  {}

item set 865 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1040,"block":1041,"conditional-expression":214,"assignment":215,"OPEN_BRACE":387,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 866 
dbl-expression-list -> dbl-expression-list COMMA expression .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1042,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 867 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1043,"block":1044,"conditional-expression":214,"assignment":215,"OPEN_BRACE":387,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 868 
type-expression-list -> type-expression-list COMMA type .expression
array-type -> type .rank-specifiers
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1045,"rank-specifiers":190,"conditional-expression":214,"assignment":215,"rank-specifier":191,"conditional-or-expression":216,"unary-expression":217,"OPEN_BRACKET":192,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 869 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1046,"block":1047,"conditional-expression":214,"assignment":215,"OPEN_BRACE":387,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 870 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 871 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS .OP_DBLPTR expression block 
transitions ->  {"OP_DBLPTR":1048}

item set 872 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":384}

item set 873 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1049,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 874 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS expression . 
transitions ->  {}

item set 875 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS expression . 
transitions ->  {}

item set 876 
base-access -> BASE OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 877 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1050,"COLON":809,"COMMA":810}

item set 878 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1051,"OPEN_BRACE":408}

item set 879 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1052,"COLON":809,"COMMA":810}

item set 880 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1053,"block-expression-with-brace":1054,"invocation-expression":266,"OPEN_BRACE":408,"AWAIT":277,"primary-expression":548,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 881 
object-creation-expression -> NEW type-with-identifier rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 882 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1055,"COLON":809,"COMMA":810}

item set 883 
object-creation-expression -> NEW non-array-type rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 884 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1056,"COLON":809,"COMMA":810}

item set 885 
block-expression-with-brace -> OPEN_BRACE block-expression-list CLOSE_BRACE . 
transitions ->  {}

item set 886 
block-expression-list -> block-expression-list COMMA .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list-unit":1057,"block-expression-with-brace":674,"expression":675,"OPEN_BRACE":408,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 887 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 888 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 889 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 890 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 891 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1058,"rank-specifiers":190,"DOT":398,"OP_PTR":399,"rank-specifier":191,"OPEN_BRACKET":192}

item set 892 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1059,"COLON":809,"COMMA":810}

item set 893 
invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 894 
constant-declaration -> CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1060,"COMMA":1061}

item set 895 
constant-declarators -> constant-declarator .
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 896 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1062}

item set 897 
constant-declaration -> attributes CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1063,"constant-declarator":895,"IDENTIFIER_WITH_TEMPLATE":896,"IDENTIFIER":60}

item set 898 
constant-declaration -> attributes modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1064,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 899 
field-declaration -> attributes modifiers type-with-interr .member-name SEMICOLON
property-declaration -> attributes modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":1065,"THIS":726,"OPERATOR":913,"variable-declarators":727,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 900 
event-declaration -> attributes modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1066,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 901 
indexer-declaration -> attributes modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1067}

item set 902 
operator-declaration -> attributes modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1068,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 903 
constructor-declaration -> attributes modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1069,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 904 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":1070}

item set 905 
field-declaration -> attributes type-with-interr member-name .SEMICOLON
property-declaration -> attributes type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1071,"OPEN_BRACE":1072,"OPEN_PARENS":1073,"OPEN_BRACKET":924}

item set 906 
event-declaration -> attributes EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1074,"member-name":1075,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 907 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1076,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 908 
constructor-declaration -> attributes constructor-declarator method-body . 
transitions ->  {}

item set 909 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1077}

item set 910 
destructor-declaration -> attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1078,"IDENTIFIER":60}

item set 911 
constant-declaration -> modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1079,"constant-declarator":895,"IDENTIFIER_WITH_TEMPLATE":896,"IDENTIFIER":60}

item set 912 
field-declaration -> modifiers type-with-interr member-name .SEMICOLON
property-declaration -> modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1080,"OPEN_BRACE":1081,"OPEN_PARENS":1082,"OPEN_BRACKET":924}

item set 913 
unary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
overloadable-operator -> .overloadable-unary-operator
overloadable-operator -> .overloadable-binary-operator
overloadable-unary-operator -> .OP_INC
overloadable-unary-operator -> .OP_DEC
overloadable-unary-operator -> .MINUS
overloadable-unary-operator -> .BANG
overloadable-unary-operator -> .TILDE
overloadable-unary-operator -> .PLUS
overloadable-unary-operator -> .TRUE
overloadable-unary-operator -> .FALSE
overloadable-binary-operator -> .PLUS
overloadable-binary-operator -> .MINUS
overloadable-binary-operator -> .STAR
overloadable-binary-operator -> .DIV
overloadable-binary-operator -> .PERCENT
overloadable-binary-operator -> .AMP
overloadable-binary-operator -> .BITWISE_OR
overloadable-binary-operator -> .CARET
overloadable-binary-operator -> .OP_LEFT_SHIFT
overloadable-binary-operator -> .RIGHT_SHIFT
overloadable-binary-operator -> .OP_EQ
overloadable-binary-operator -> .OP_NE
overloadable-binary-operator -> .OP_GE
overloadable-binary-operator -> .OP_LE
overloadable-binary-operator -> .GT
overloadable-binary-operator -> .LT 
transitions ->  {"overloadable-operator":1083,"overloadable-unary-operator":1084,"overloadable-binary-operator":1085,"OP_INC":1086,"OP_DEC":1087,"MINUS":1088,"BANG":1089,"TILDE":1090,"PLUS":1091,"TRUE":1092,"FALSE":1093,"STAR":1094,"DIV":1095,"PERCENT":1096,"AMP":1097,"BITWISE_OR":1098,"CARET":1099,"OP_LEFT_SHIFT":1100,"RIGHT_SHIFT":1101,"OP_EQ":1102,"OP_NE":1103,"OP_GE":1104,"OP_LE":1105,"GT":1106,"LT":1107}

item set 914 
event-declaration -> modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1108,"member-name":1109,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 915 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1110,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 916 
operator-declaration -> modifiers operator-declarator method-body . 
transitions ->  {}

item set 917 
constructor-declaration -> modifiers constructor-declarator method-body . 
transitions ->  {}

item set 918 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1111,"formal-parameter-list":940,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 919 
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1112,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 920 
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1113,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 921 
field-declaration -> type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 922 
property-declaration -> type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1114,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 923 
method-header -> type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1115,"formal-parameter-list":1116,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 924 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1117,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 925 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1118,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 926 
variable-declarators -> variable-declarators COMMA .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarator":1119,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 927 
variable-declarator -> type-name ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":1120,"expression":863,"array-initializer":864,"conditional-expression":214,"assignment":215,"OPEN_BRACE":645,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 928 
event-declaration -> EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1121,"COMMA":926}

item set 929 
event-declaration -> EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1122}

item set 930 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1123}

item set 931 
accessor-declarations -> get-accessor-declaration .
accessor-declarations -> get-accessor-declaration .set-accessor-declaration
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"set-accessor-declaration":1124,"attributes":1125,"modifiers":1126,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 932 
accessor-declarations -> set-accessor-declaration .
accessor-declarations -> set-accessor-declaration .get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"get-accessor-declaration":1127,"attributes":1128,"modifiers":1129,"GET":935,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 933 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1130,"GET":1131,"SET":1132,"modifier":29,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 934 
get-accessor-declaration -> modifiers .GET method-body
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1133,"SET":1134,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 935 
get-accessor-declaration -> GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1135,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 936 
set-accessor-declaration -> SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1136,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 937 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1137}

item set 938 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1138}

item set 939 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1139,"COLON":1140}

item set 940 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS constructor-initializer 
transitions ->  {"CLOSE_PARENS":1141}

item set 941 
where-base -> where-units COMMA NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 942 
where-names -> where-names COMMA .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-name":1142,"type-name":744,"type":745,"CLASS":746,"STRUCT":747,"NEW":748,"namespace-or-type-name":95,"non-array-type":116,"array-type":117,"IDENTIFIER_WITH_KEYWORD":62,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 943 
where-name -> NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1143}

item set 944 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 945 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 946 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1144}

item set 947 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 948 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1145}

item set 949 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 950 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1146}

item set 951 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 952 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1147,"where-units":159,"where-unit":161,"WHERE":162}

item set 953 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1148}

item set 954 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 955 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 956 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1149}

item set 957 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1150,"where-units":159,"where-unit":161,"WHERE":162}

item set 958 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 959 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 960 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 961 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1151}

item set 962 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1152,"where-units":159,"where-unit":161,"WHERE":162}

item set 963 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1153,"formal-parameter-list":1154,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 964 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1155,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 965 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1159,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 966 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1160,"OPEN_BRACE":1161}

item set 967 
interface-indexer-declaration -> attributes type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1162}

item set 968 
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1163,"THIS":1164,"IDENTIFIER":60}

item set 969 
interface-event-declaration -> attributes NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1165,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 970 
interface-event-declaration -> attributes EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1166,"IDENTIFIER":60}

item set 971 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1167,"OPEN_BRACE":1168}

item set 972 
interface-indexer-declaration -> NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1169}

item set 973 
interface-event-declaration -> NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1170,"IDENTIFIER":60}

item set 974 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1171}

item set 975 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 976 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 977 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1172}

item set 978 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 979 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 980 
parameter-array -> PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 981 
parameter-array -> attributes PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1173,"STARS":195,"IDENTIFIER":60,"STAR":194}

item set 982 
fixed-parameter -> attributes type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 983 
fixed-parameter -> attributes parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1174,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 984 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1175,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 985 
fixed-parameter -> THIS type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 986 
fixed-parameter -> parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 987 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 988 
argument-list -> argument-list COLON argument . 
transitions ->  {}

item set 989 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 990 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block . 
transitions ->  {}

item set 991 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels .
switch-labels -> switch-labels .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"switch-label":1176,"CASE":994,"DEFAULT":1177}

item set 992 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON statement . 
transitions ->  {}

item set 993 
switch-labels -> switch-label . 
transitions ->  {}

item set 994 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1178,"expression":793,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 995 
switch-label -> DEFAULT .COLON
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {"COLON":1179}

item set 996 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":1180,"local-variable":826,"INTERR":827,"STARS":828,"IDENTIFIER_WITH_KEYWORD":829,"STAR":194,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 997 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":1181,"expression":1182,"array-initializer":1183,"conditional-expression":214,"assignment":215,"OPEN_BRACE":645,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 998 
local-variable -> INTERR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 999 
local-variable -> STARS IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 1000 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":1061}

item set 1001 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":1184,"FINALLY":1005}

item set 1002 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 1003 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"general-catch-clause":1185,"specific-catch-clause":1186,"CATCH":1007}

item set 1004 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 1005 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1187,"OPEN_BRACE":387}

item set 1006 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 1007 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1188,"OPEN_PARENS":1189,"OPEN_BRACE":387}

item set 1008 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1190}

item set 1009 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1191}

item set 1010 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 1011 
resource-acquisition -> expression . 
transitions ->  {}

item set 1012 
fixed-statement -> modifiers FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1192,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1013 
fixed-statement -> FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1193,"rank-specifiers":190,"local-variable-declarator":825,"rank-specifier":191,"local-variable":826,"OPEN_BRACKET":192,"INTERR":827,"STARS":828,"IDENTIFIER_WITH_KEYWORD":829,"STAR":194,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1014 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":1194}

item set 1015 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 1016 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":1195}

item set 1017 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1196}

item set 1018 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":1197}

item set 1019 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1198,"for-condition":1199,"boolean-expression":1200,"expression":1015,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1020 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1201}

item set 1021 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 1022 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1202}

item set 1023 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 1024 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1203,"rank-specifiers":190,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"rank-specifier":191,"IDENTIFIER":60,"OPEN_BRACKET":192}

item set 1025 
break-statement -> YIELD BREAK SEMICOLON . 
transitions ->  {}

item set 1026 
return-statement -> YIELD RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":1204}

item set 1027 
return-statement -> YIELD RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":1205}

item set 1028 
return-statement -> YIELD RETURN SEMICOLON . 
transitions ->  {}

item set 1029 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1030 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":1206}

item set 1031 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 1032 
return-statement -> RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 1033 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 1034 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 1035 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace . 
transitions ->  {}

item set 1036 
argument-list-with-brace -> OPEN_BRACE .argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .argument-list CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .CLOSE_BRACE
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1207,"CLOSE_BRACE":1208,"argument":560,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1037 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":1209,"array-initializer":1210,"rank-specifier":191,"OPEN_BRACE":645,"OPEN_BRACKET":192}

item set 1038 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 1039 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1211,"variable-initializer":1212,"expression":863,"array-initializer":864,"conditional-expression":214,"assignment":215,"OPEN_BRACE":645,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1040 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1041 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1042 
dbl-expression-list -> dbl-expression-list COMMA expression expression . 
transitions ->  {}

item set 1043 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1044 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1045 
type-expression-list -> type-expression-list COMMA type expression . 
transitions ->  {}

item set 1046 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1047 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1048 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR .expression block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1213,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1049 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1214,"OPEN_BRACE":387}

item set 1050 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1215,"OPEN_BRACE":408}

item set 1051 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1052 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1216,"invocation-expression":266,"AWAIT":277,"primary-expression":548,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1053 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1217,"DOT":1218,"OP_PTR":383}

item set 1054 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1055 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1219,"OPEN_BRACE":408}

item set 1056 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1220,"OPEN_BRACE":408}

item set 1057 
block-expression-list -> block-expression-list COMMA block-expression-list-unit . 
transitions ->  {}

item set 1058 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 1059 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1060 
constant-declaration -> CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1061 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarator":1221,"IDENTIFIER_WITH_TEMPLATE":896,"IDENTIFIER":60}

item set 1062 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1222,"expression":793,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1063 
constant-declaration -> attributes CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1223,"COMMA":1061}

item set 1064 
constant-declaration -> attributes modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1224,"constant-declarator":895,"IDENTIFIER_WITH_TEMPLATE":896,"IDENTIFIER":60}

item set 1065 
field-declaration -> attributes modifiers type-with-interr member-name .SEMICOLON
property-declaration -> attributes modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1225,"OPEN_BRACE":1226,"OPEN_PARENS":1227,"OPEN_BRACKET":924}

item set 1066 
event-declaration -> attributes modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1228,"member-name":1229,"variable-declarator":728,"type-name":729,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1067 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1230,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 1068 
operator-declaration -> attributes modifiers operator-declarator method-body . 
transitions ->  {}

item set 1069 
constructor-declaration -> attributes modifiers constructor-declarator method-body . 
transitions ->  {}

item set 1070 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1231,"formal-parameter-list":940,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1071 
field-declaration -> attributes type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1072 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1232,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 1073 
method-header -> attributes type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1233,"formal-parameter-list":1234,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1074 
event-declaration -> attributes EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1235,"COMMA":926}

item set 1075 
event-declaration -> attributes EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1236}

item set 1076 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1237}

item set 1077 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1238}

item set 1078 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1239}

item set 1079 
constant-declaration -> modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1240,"COMMA":1061}

item set 1080 
field-declaration -> modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1081 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1241,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 1082 
method-header -> modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1242,"formal-parameter-list":1243,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1083 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1244}

item set 1084 
overloadable-operator -> overloadable-unary-operator . 
transitions ->  {}

item set 1085 
overloadable-operator -> overloadable-binary-operator . 
transitions ->  {}

item set 1086 
overloadable-unary-operator -> OP_INC . 
transitions ->  {}

item set 1087 
overloadable-unary-operator -> OP_DEC . 
transitions ->  {}

item set 1088 
overloadable-unary-operator -> MINUS .
overloadable-binary-operator -> MINUS . 
transitions ->  {}

item set 1089 
overloadable-unary-operator -> BANG . 
transitions ->  {}

item set 1090 
overloadable-unary-operator -> TILDE . 
transitions ->  {}

item set 1091 
overloadable-unary-operator -> PLUS .
overloadable-binary-operator -> PLUS . 
transitions ->  {}

item set 1092 
overloadable-unary-operator -> TRUE . 
transitions ->  {}

item set 1093 
overloadable-unary-operator -> FALSE . 
transitions ->  {}

item set 1094 
overloadable-binary-operator -> STAR . 
transitions ->  {}

item set 1095 
overloadable-binary-operator -> DIV . 
transitions ->  {}

item set 1096 
overloadable-binary-operator -> PERCENT . 
transitions ->  {}

item set 1097 
overloadable-binary-operator -> AMP . 
transitions ->  {}

item set 1098 
overloadable-binary-operator -> BITWISE_OR . 
transitions ->  {}

item set 1099 
overloadable-binary-operator -> CARET . 
transitions ->  {}

item set 1100 
overloadable-binary-operator -> OP_LEFT_SHIFT . 
transitions ->  {}

item set 1101 
overloadable-binary-operator -> RIGHT_SHIFT . 
transitions ->  {}

item set 1102 
overloadable-binary-operator -> OP_EQ . 
transitions ->  {}

item set 1103 
overloadable-binary-operator -> OP_NE . 
transitions ->  {}

item set 1104 
overloadable-binary-operator -> OP_GE . 
transitions ->  {}

item set 1105 
overloadable-binary-operator -> OP_LE . 
transitions ->  {}

item set 1106 
overloadable-binary-operator -> GT . 
transitions ->  {}

item set 1107 
overloadable-binary-operator -> LT . 
transitions ->  {}

item set 1108 
event-declaration -> modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1245,"COMMA":926}

item set 1109 
event-declaration -> modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1246}

item set 1110 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1247}

item set 1111 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1248,"constructor-initializer":1139,"block":733,"SEMICOLON":734,"COLON":1140,"OPEN_BRACE":387}

item set 1112 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1249}

item set 1113 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1250}

item set 1114 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1251}

item set 1115 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1252,"where-units":159,"where-unit":161,"WHERE":162}

item set 1116 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1253}

item set 1117 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1254}

item set 1118 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1255}

item set 1119 
variable-declarators -> variable-declarators COMMA variable-declarator . 
transitions ->  {}

item set 1120 
variable-declarator -> type-name ASSIGN variable-initializer . 
transitions ->  {}

item set 1121 
event-declaration -> EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1122 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1256,"add-accessor-declaration":1257,"remove-accessor-declaration":1258,"ADD":1259,"attributes":1260,"REMOVE":1261,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1123 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1124 
accessor-declarations -> get-accessor-declaration set-accessor-declaration . 
transitions ->  {}

item set 1125 
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1262,"SET":1132,"modifier":29,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1126 
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1134,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1127 
accessor-declarations -> set-accessor-declaration get-accessor-declaration . 
transitions ->  {}

item set 1128 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1263,"GET":1131,"modifier":29,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1129 
get-accessor-declaration -> modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1133,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1130 
get-accessor-declaration -> attributes modifiers .GET method-body
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1264,"SET":1265,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1131 
get-accessor-declaration -> attributes GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1266,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1132 
set-accessor-declaration -> attributes SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1267,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1133 
get-accessor-declaration -> modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1268,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1134 
set-accessor-declaration -> modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1269,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1135 
get-accessor-declaration -> GET method-body . 
transitions ->  {}

item set 1136 
set-accessor-declaration -> SET method-body . 
transitions ->  {}

item set 1137 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1270,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1138 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1271}

item set 1139 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1140 
constructor-initializer -> COLON .BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"BASE":1272,"THIS":1273}

item set 1141 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1274,"COLON":1140}

item set 1142 
where-names -> where-names COMMA where-name . 
transitions ->  {}

item set 1143 
where-name -> NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1144 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 1145 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1146 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1147 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1275}

item set 1148 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1276,"where-units":159,"where-unit":161,"WHERE":162}

item set 1149 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1150 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1277}

item set 1151 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1152 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1278}

item set 1153 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1279,"where-units":159,"where-unit":161,"WHERE":162}

item set 1154 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1280}

item set 1155 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1281}

item set 1156 
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON 
transitions ->  {"GET":1282,"SET":1283}

item set 1157 
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON 
transitions ->  {"SEMICOLON":1284}

item set 1158 
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON 
transitions ->  {"SEMICOLON":1285}

item set 1159 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1286}

item set 1160 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1287,"formal-parameter-list":1288,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1161 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1289,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1162 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1290,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1163 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1291,"OPEN_BRACE":1292}

item set 1164 
interface-indexer-declaration -> attributes NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1293}

item set 1165 
interface-event-declaration -> attributes NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1294,"IDENTIFIER":60}

item set 1166 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1295}

item set 1167 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1296,"formal-parameter-list":1297,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1168 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1298,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1169 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1299,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1170 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1300}

item set 1171 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1172 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1173 
parameter-array -> attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 1174 
fixed-parameter -> attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 1175 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 1176 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 1177 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":1179}

item set 1178 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":1301}

item set 1179 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 1180 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 1181 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 1182 
local-variable-initializer -> expression . 
transitions ->  {}

item set 1183 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 1184 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 1185 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 1186 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 1187 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 1188 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 1189 
specific-catch-clause -> CATCH OPEN_PARENS .type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1302,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1190 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1303,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1191 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1304,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1192 
fixed-statement -> modifiers FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1305,"rank-specifiers":190,"local-variable-declarator":825,"rank-specifier":191,"local-variable":826,"OPEN_BRACKET":192,"INTERR":827,"STARS":828,"IDENTIFIER_WITH_KEYWORD":829,"STAR":194,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1193 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1306,"COMMA":996}

item set 1194 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1307,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1195 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":1308,"OPEN_BRACE":1309}

item set 1196 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1310,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1197 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1311,"expression":1015,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1198 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1312,"for-iterator":1313,"statement-expression-list":1314,"statement-expression":1023,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"invocation-expression":266,"NEW":269,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1199 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1315}

item set 1200 
for-condition -> boolean-expression . 
transitions ->  {}

item set 1201 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1316,"for-condition":1317,"boolean-expression":1200,"expression":1015,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1202 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-expression":1318,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"invocation-expression":266,"NEW":269,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1203 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":1319}

item set 1204 
return-statement -> YIELD RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 1205 
return-statement -> YIELD RETURN expression SEMICOLON . 
transitions ->  {}

item set 1206 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 1207 
argument-list-with-brace -> OPEN_BRACE argument-list .COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE argument-list .CLOSE_BRACE
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"COMMA":1320,"CLOSE_BRACE":1321,"COLON":809}

item set 1208 
argument-list-with-brace -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1209 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"array-initializer":1322,"rank-specifier":335,"OPEN_BRACE":645,"OPEN_BRACKET":192}

item set 1210 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 1211 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1212 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 1213 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1323,"OPEN_BRACE":387}

item set 1214 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1215 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1216 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1324,"DOT":1218,"OP_PTR":383}

item set 1217 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1325,"OPEN_BRACE":408}

item set 1218 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":571,"IDENTIFIER_WITH_KEYWORD":1326,"AWAIT":277,"primary-expression":548,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":76,"WHERE":77,"primary-no-array-creation-expression":232,"array-creation-expression":233,"IDENTIFIER":60,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"type":265,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"TRUE":275,"FALSE":276,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1219 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1220 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1221 
constant-declarators -> constant-declarators COMMA constant-declarator .
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 1222 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression .
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1223 
constant-declaration -> attributes CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1224 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1327,"COMMA":1061}

item set 1225 
field-declaration -> attributes modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1226 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1328,"get-accessor-declaration":931,"set-accessor-declaration":932,"attributes":933,"modifiers":934,"GET":935,"SET":936,"attribute-sections":28,"modifier":29,"attribute-section":30,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46,"OPEN_BRACKET":53}

item set 1227 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1329,"formal-parameter-list":1330,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1228 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1331,"COMMA":926}

item set 1229 
event-declaration -> attributes modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1332}

item set 1230 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1333}

item set 1231 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1334,"constructor-initializer":1139,"block":733,"SEMICOLON":734,"COLON":1140,"OPEN_BRACE":387}

item set 1232 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1335}

item set 1233 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1336,"where-units":159,"where-unit":161,"WHERE":162}

item set 1234 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1337}

item set 1235 
event-declaration -> attributes EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1236 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1338,"add-accessor-declaration":1257,"remove-accessor-declaration":1258,"ADD":1259,"attributes":1260,"REMOVE":1261,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1237 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1238 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1339,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1239 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1340}

item set 1240 
constant-declaration -> modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1241 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1341}

item set 1242 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1342,"where-units":159,"where-unit":161,"WHERE":162}

item set 1243 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1343}

item set 1244 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1344,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1245 
event-declaration -> modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1246 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1345,"add-accessor-declaration":1257,"remove-accessor-declaration":1258,"ADD":1259,"attributes":1260,"REMOVE":1261,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1247 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1248 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1249 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1346,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1250 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1347,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1251 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1252 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1253 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1348,"where-units":159,"where-unit":161,"WHERE":162}

item set 1254 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1255 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1256 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1349}

item set 1257 
event-accessor-declarations -> add-accessor-declaration .remove-accessor-declaration
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"remove-accessor-declaration":1350,"REMOVE":1261,"attributes":1351,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1258 
event-accessor-declarations -> remove-accessor-declaration .add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"add-accessor-declaration":1352,"ADD":1259,"attributes":1353,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1259 
add-accessor-declaration -> ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1354,"OPEN_BRACE":387}

item set 1260 
add-accessor-declaration -> attributes .ADD block
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"ADD":1355,"REMOVE":1356}

item set 1261 
remove-accessor-declaration -> REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1357,"OPEN_BRACE":387}

item set 1262 
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1265,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1263 
get-accessor-declaration -> attributes modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1264,"modifier":110,"UNSAFE":31,"ASYNC":32,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"NEW":46}

item set 1264 
get-accessor-declaration -> attributes modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1358,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1265 
set-accessor-declaration -> attributes modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1359,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1266 
get-accessor-declaration -> attributes GET method-body . 
transitions ->  {}

item set 1267 
set-accessor-declaration -> attributes SET method-body . 
transitions ->  {}

item set 1268 
get-accessor-declaration -> modifiers GET method-body . 
transitions ->  {}

item set 1269 
set-accessor-declaration -> modifiers SET method-body . 
transitions ->  {}

item set 1270 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1271 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1360,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1272 
constructor-initializer -> COLON BASE .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON BASE .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1361}

item set 1273 
constructor-initializer -> COLON THIS .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON THIS .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1362}

item set 1274 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1275 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1276 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1363}

item set 1277 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1278 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1279 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1364}

item set 1280 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1365,"where-units":159,"where-unit":161,"WHERE":162}

item set 1281 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1282 
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1366}

item set 1283 
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1367}

item set 1284 
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1368,"GET":1369,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1285 
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1370,"SET":1371,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1286 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1372}

item set 1287 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1373,"where-units":159,"where-unit":161,"WHERE":162}

item set 1288 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1374}

item set 1289 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1375}

item set 1290 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1376}

item set 1291 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1377,"formal-parameter-list":1378,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1292 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1379,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1293 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1380,"fixed-parameters":530,"parameter-array":531,"fixed-parameter":532,"PARAMS":533,"attributes":534,"type-with-interr":535,"THIS":536,"parameter-modifier":537,"attribute-sections":28,"type":115,"REF":538,"OUT":539,"attribute-section":30,"non-array-type":116,"array-type":117,"OPEN_BRACKET":53,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1294 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1381}

item set 1295 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1296 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1382,"where-units":159,"where-unit":161,"WHERE":162}

item set 1297 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1383}

item set 1298 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1384}

item set 1299 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1385}

item set 1300 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1301 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 1302 
specific-catch-clause -> CATCH OPEN_PARENS type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS type .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
array-type -> type .rank-specifiers
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1386,"IDENTIFIER_WITH_TEMPLATE":1387,"rank-specifiers":190,"IDENTIFIER":60,"rank-specifier":191,"OPEN_BRACKET":192}

item set 1303 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1304 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1305 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1388,"COMMA":996}

item set 1306 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1389,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1307 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":1390}

item set 1308 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 1309 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-sections switch-section
switch-sections -> .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1391,"switch-sections":1392,"switch-section":1393,"switch-labels":1394,"switch-label":993,"CASE":994,"DEFAULT":1177}

item set 1310 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1311 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":1395}

item set 1312 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1396,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1313 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1397}

item set 1314 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1202}

item set 1315 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1398,"for-iterator":1399,"statement-expression-list":1314,"statement-expression":1023,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"invocation-expression":266,"NEW":269,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1316 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1400,"for-iterator":1401,"statement-expression-list":1314,"statement-expression":1023,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"invocation-expression":266,"NEW":269,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1317 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1402}

item set 1318 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 1319 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1403,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1320 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA .CLOSE_BRACE
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1404,"argument":989,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1321 
argument-list-with-brace -> OPEN_BRACE argument-list CLOSE_BRACE . 
transitions ->  {}

item set 1322 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 1323 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1324 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1405,"OPEN_BRACE":408}

item set 1325 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1326 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":384}

item set 1327 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1328 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1406}

item set 1329 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1407,"where-units":159,"where-unit":161,"WHERE":162}

item set 1330 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1408}

item set 1331 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1332 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1409,"add-accessor-declaration":1257,"remove-accessor-declaration":1258,"ADD":1259,"attributes":1260,"REMOVE":1261,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1333 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1334 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1335 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1336 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1337 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1410,"where-units":159,"where-unit":161,"WHERE":162}

item set 1338 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1411}

item set 1339 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1340 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1412,"block":733,"SEMICOLON":734,"OPEN_BRACE":387}

item set 1341 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1342 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1343 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1413,"where-units":159,"where-unit":161,"WHERE":162}

item set 1344 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1414,"IDENTIFIER":60}

item set 1345 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1415}

item set 1346 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1416,"IDENTIFIER_WITH_KEYWORD":1417,"IDENTIFIER":60,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77}

item set 1347 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1418,"IDENTIFIER_WITH_KEYWORD":1419,"IDENTIFIER":60,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77}

item set 1348 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1349 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1350 
event-accessor-declarations -> add-accessor-declaration remove-accessor-declaration . 
transitions ->  {}

item set 1351 
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"REMOVE":1356}

item set 1352 
event-accessor-declarations -> remove-accessor-declaration add-accessor-declaration . 
transitions ->  {}

item set 1353 
add-accessor-declaration -> attributes .ADD block 
transitions ->  {"ADD":1355}

item set 1354 
add-accessor-declaration -> ADD block . 
transitions ->  {}

item set 1355 
add-accessor-declaration -> attributes ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1420,"OPEN_BRACE":387}

item set 1356 
remove-accessor-declaration -> attributes REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1421,"OPEN_BRACE":387}

item set 1357 
remove-accessor-declaration -> REMOVE block . 
transitions ->  {}

item set 1358 
get-accessor-declaration -> attributes modifiers GET method-body . 
transitions ->  {}

item set 1359 
set-accessor-declaration -> attributes modifiers SET method-body . 
transitions ->  {}

item set 1360 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1361 
constructor-initializer -> COLON BASE OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON BASE OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1422,"argument-list":1423,"argument":560,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1362 
constructor-initializer -> COLON THIS OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON THIS OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1424,"argument-list":1425,"argument":560,"expression":561,"REF":562,"OUT":563,"conditional-expression":214,"assignment":215,"conditional-or-expression":216,"unary-expression":217,"conditional-and-expression":218,"pre-increment-expression":219,"pre-decrement-expression":220,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-expression":228,"inclusive-or-expression":229,"OP_INC":230,"OP_DEC":231,"primary-no-array-creation-expression":232,"array-creation-expression":233,"exclusive-or-expression":234,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"invocation-expressions":241,"element-access":242,"this-access":243,"base-access":244,"post-increment-expression":245,"post-decrement-expression":246,"delegate-creation-expression":247,"object-creation-expression":248,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"and-expression":257,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"invocation-expression":266,"THIS":267,"BASE":268,"NEW":269,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"equality-expression":274,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"AWAIT":277,"relational-expression":278,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"shift-expression":279,"namespace-or-type-name":95,"additive-expression":280,"multiplicative-expression":281}

item set 1363 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1364 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1365 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1426}

item set 1366 
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1427,"SET":1428,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1367 
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1429,"GET":1430,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1368 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1431}

item set 1369 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1432}

item set 1370 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1433}

item set 1371 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1434}

item set 1372 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1435,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1373 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1436}

item set 1374 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1437,"where-units":159,"where-unit":161,"WHERE":162}

item set 1375 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1376 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1438}

item set 1377 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1439,"where-units":159,"where-unit":161,"WHERE":162}

item set 1378 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1440}

item set 1379 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1441}

item set 1380 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1442}

item set 1381 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1382 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1443}

item set 1383 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1444,"where-units":159,"where-unit":161,"WHERE":162}

item set 1384 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1385 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1445}

item set 1386 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1446,"OPEN_BRACE":387}

item set 1387 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":1447}

item set 1388 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1448,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1389 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1390 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1449,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1391 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1392 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1450,"switch-section":1451,"switch-labels":1394,"switch-label":993,"CASE":994,"DEFAULT":1177}

item set 1393 
switch-sections -> switch-section . 
transitions ->  {}

item set 1394 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-list":1452,"switch-label":1176,"statement":579,"CASE":994,"DEFAULT":995,"labeled-statement":580,"declaration-statement":581,"embedded-statement":582,"IDENTIFIER_WITH_KEYWORD":583,"local-variable-declaration":584,"local-constant-declaration":585,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":461,"WHERE":77,"primary-expression":599,"type":600,"CONST":601,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expression":266,"NEW":629,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"BASE":268,"TYPEOF":270,"SIZEOF":271,"namespace-or-type-name":95,"TRUE":275,"FALSE":276}

item set 1395 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":1453}

item set 1396 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1397 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1454,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1398 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1455,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1399 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1456}

item set 1400 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1457,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1401 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1458}

item set 1402 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1459,"for-iterator":1460,"statement-expression-list":1314,"statement-expression":1023,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"invocation-expression":266,"NEW":269,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"CHECKED":272,"UNCHECKED":273,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"ASYNC":76,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1403 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1461}

item set 1404 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1405 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1406 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1407 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1408 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1462,"where-units":159,"where-unit":161,"WHERE":162}

item set 1409 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1463}

item set 1410 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1411 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1412 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1413 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1414 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1464,"COMMA":1465}

item set 1415 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1416 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1466}

item set 1417 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1467}

item set 1418 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1468}

item set 1419 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1469}

item set 1420 
add-accessor-declaration -> attributes ADD block . 
transitions ->  {}

item set 1421 
remove-accessor-declaration -> attributes REMOVE block . 
transitions ->  {}

item set 1422 
constructor-initializer -> COLON BASE OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1423 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1470,"COLON":809,"COMMA":810}

item set 1424 
constructor-initializer -> COLON THIS OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1425 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1471,"COLON":809,"COMMA":810}

item set 1426 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1427 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1472}

item set 1428 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1473}

item set 1429 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1474}

item set 1430 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1475}

item set 1431 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1476}

item set 1432 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1433 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1477}

item set 1434 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1435 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1478}

item set 1436 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1437 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1479}

item set 1438 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1480,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1439 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1481}

item set 1440 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1482,"where-units":159,"where-unit":161,"WHERE":162}

item set 1441 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1442 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1483}

item set 1443 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1444 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1484}

item set 1445 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1485,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1446 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS block . 
transitions ->  {}

item set 1447 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1486,"OPEN_BRACE":387}

item set 1448 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1449 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 1450 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 1451 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 1452 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement":819,"labeled-statement":580,"declaration-statement":581,"embedded-statement":582,"IDENTIFIER_WITH_KEYWORD":583,"local-variable-declaration":584,"local-constant-declaration":585,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"IDENTIFIER_WITH_TEMPLATE":365,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":267,"ASYNC":461,"WHERE":77,"primary-expression":599,"type":600,"CONST":601,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"IDENTIFIER":60,"primary-no-array-creation-expression":232,"array-creation-expression":233,"non-array-type":116,"array-type":117,"invocation-expression":266,"NEW":629,"unary-expression":630,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"BASE":268,"TYPEOF":270,"SIZEOF":271,"namespace-or-type-name":95,"TRUE":275,"FALSE":276}

item set 1453 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 1454 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1455 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1456 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1487,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1457 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1458 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1488,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1459 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1489,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1460 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1490}

item set 1461 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1491,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1462 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1463 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1464 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1465 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1492,"type":115,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95,"IDENTIFIER_WITH_KEYWORD":62,"IDENTIFIER_WITH_TEMPLATE":96,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"THIS":75,"ASYNC":76,"WHERE":77,"IDENTIFIER":60}

item set 1466 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1467 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1468 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1469 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1470 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1471 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1472 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1493}

item set 1473 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1474 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1494}

item set 1475 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1476 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1477 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1478 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1479 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1480 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1495}

item set 1481 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1482 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1496}

item set 1483 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1497,"attributes":1156,"SET":1157,"GET":1158,"attribute-sections":28,"attribute-section":30,"OPEN_BRACKET":53}

item set 1484 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1485 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1498}

item set 1486 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block . 
transitions ->  {}

item set 1487 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1488 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1489 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1490 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1499,"block":586,"empty-statement":587,"statement-expression":588,"selection-statement":589,"iteration-statement":590,"jump-statement":591,"try-statement":592,"checked-statement":593,"unchecked-statement":594,"lock-statement":595,"using-statement":596,"unsafe-statement":597,"fixed-statement":598,"OPEN_BRACE":387,"SEMICOLON":602,"invocation-expressions":603,"object-creation-expression":604,"assignment":605,"post-increment-expression":606,"post-decrement-expression":607,"pre-increment-expression":608,"pre-decrement-expression":609,"if-statement":610,"switch-statement":611,"while-statement":612,"do-statement":613,"for-statement":614,"foreach-statement":615,"break-statement":616,"continue-statement":617,"goto-statement":618,"return-statement":619,"throw-statement":620,"TRY":621,"CHECKED":622,"UNCHECKED":623,"LOCK":624,"USING":625,"UNSAFE":626,"modifiers":627,"FIXED":628,"invocation-expression":266,"NEW":629,"unary-expression":630,"primary-expression":228,"OP_INC":230,"OP_DEC":231,"IF":631,"SWITCH":632,"WHILE":633,"DO":634,"FOR":635,"FOREACH":636,"YIELD":637,"BREAK":638,"CONTINUE":639,"GOTO":640,"RETURN":641,"THROW":642,"modifier":29,"AWAIT":277,"PLUS":221,"OP_PTR":222,"OP_COALESCING":223,"MINUS":224,"BANG":225,"TILDE":226,"STAR":227,"primary-no-array-creation-expression":232,"array-creation-expression":233,"ASYNC":461,"PUBLIC":33,"PARTIAL":34,"PROTECTED":35,"INTERNAL":36,"PRIVATE":37,"ABSTRACT":38,"SEALED":39,"STATIC":40,"READONLY":41,"VOLATILE":42,"VIRTUAL":43,"OVERRIDE":44,"EXTERN":45,"literal":235,"lambda-expression":236,"cast-expression":237,"parenthesized-expression":238,"double-colon-access":239,"member-access":240,"element-access":242,"this-access":243,"base-access":244,"delegate-creation-expression":247,"typeof-expression":249,"sizeof-expression":250,"checked-expression":251,"unchecked-expression":252,"IDENTIFIER_WITH_KEYWORD":253,"DELEGATE":254,"delegate-expression":255,"STACKALLOC":256,"BOOLEAN_LITERAL":258,"REAL_LITERAL":259,"INTEGER_LITERAL":260,"STRING_LITERAL":261,"CHARACTER_LITERAL":262,"NULL":263,"OPEN_PARENS":264,"IDENTIFIER_WITH_TEMPLATE":365,"type":265,"THIS":267,"BASE":268,"TYPEOF":270,"SIZEOF":271,"ADD":63,"REMOVE":64,"SET":65,"PARAMS":66,"DEFAULT":67,"METHOD":68,"PARAM":69,"ASSEMBLY":70,"PROPERTY":71,"MODULE":72,"FIELD":73,"TYPE":74,"WHERE":77,"TRUE":275,"FALSE":276,"IDENTIFIER":60,"non-array-type":116,"array-type":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"namespace-or-type-name":95}

item set 1491 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1492 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1500,"IDENTIFIER":60}

item set 1493 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1494 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1495 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1496 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1497 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1501}

item set 1498 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1499 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1500 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1502}

item set 1501 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1502 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}
1503 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 6, token: OPEN_BRACKET
  reduce by rule: global-attributes -> global-attribute-sections
  shift token (then go to state 57)
Conflict at state: 84, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 85, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 85, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 85, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 85, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 85, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 85, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 87, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 87, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 87, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 87, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 87, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 87, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 89, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 90, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 91, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 91, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 91, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 91, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 91, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 91, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 93, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 93, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 93, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 93, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 93, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 93, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 95, token: DOT
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 146)
Conflict at state: 98, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 111, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 112, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 116, token: STAR
  reduce by rule: type -> non-array-type
  shift token (then go to state 194)
Conflict at state: 117, token: STAR
  reduce by rule: type -> array-type
  shift token (then go to state 194)
Conflict at state: 154, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 154, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 154, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 154, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 154, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 206)
Conflict at state: 154, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 154, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 154, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 154, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 158, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 159, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 159, token: OPEN_BRACE
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 159, token: COMMA
  reduce by rule: where-unit -> 
  shift token (then go to state 289)
Conflict at state: 159, token: SEMICOLON
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 163, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 169, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 170, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 173, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 174, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 175, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 179, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 182, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 190, token: OPEN_BRACKET
  reduce by rule: array-type -> type rank-specifiers
  shift token (then go to state 192)
Conflict at state: 193, token: STAR
  reduce by rule: type -> non-array-type STARS
  shift token (then go to state 339)
Conflict at state: 195, token: STAR
  reduce by rule: type -> array-type STARS
  shift token (then go to state 339)
Conflict at state: 212, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 347)
Conflict at state: 212, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 348)
Conflict at state: 216, token: INTERR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 349)
Conflict at state: 216, token: OP_OR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 350)
Conflict at state: 217, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 362)
Conflict at state: 217, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 361)
Conflict at state: 217, token: OP_XOR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 360)
Conflict at state: 217, token: OP_OR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 359)
Conflict at state: 217, token: OP_AND_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 358)
Conflict at state: 217, token: OP_MOD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 357)
Conflict at state: 217, token: OP_DIV_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 356)
Conflict at state: 217, token: OP_MULT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 355)
Conflict at state: 217, token: OP_SUB_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 354)
Conflict at state: 217, token: OP_ADD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 353)
Conflict at state: 217, token: ASSIGN
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 352)
Conflict at state: 218, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-and-expression
  shift token (then go to state 363)
Conflict at state: 221, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 221, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 221, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 221, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 221, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 221, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 221, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 221, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 221, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 221, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 221, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 221, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 221, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 221, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 221, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 221, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 221, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 221, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 221, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 221, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 221, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 221, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 221, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 221, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 221, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 221, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 221, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 221, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 221, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 221, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 221, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 221, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 221, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 221, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 221, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 221, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 221, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 221, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 221, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 221, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 221, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 221, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 221, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 221, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 221, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 221, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 221, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 221, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 221, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 221, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 221, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 221, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 221, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 221, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 221, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 221, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 221, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 221, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 222, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 222, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 222, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 222, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 222, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 222, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 222, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 222, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 222, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 222, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 222, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 222, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 222, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 222, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 222, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 222, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 222, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 222, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 222, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 222, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 222, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 222, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 222, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 222, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 222, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 222, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 222, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 222, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 222, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 222, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 222, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 222, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 222, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 222, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 222, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 222, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 222, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 222, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 222, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 222, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 222, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 222, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 222, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 222, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 222, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 222, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 222, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 222, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 222, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 222, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 222, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 222, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 222, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 222, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 222, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 222, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 222, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 222, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 223, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 223, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 223, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 223, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 223, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 223, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 223, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 223, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 223, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 223, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 223, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 223, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 223, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 223, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 223, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 223, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 223, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 223, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 223, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 223, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 223, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 223, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 223, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 223, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 223, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 223, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 223, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 223, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 223, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 223, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 223, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 223, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 223, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 223, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 223, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 223, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 223, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 223, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 223, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 223, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 223, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 223, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 223, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 223, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 223, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 223, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 223, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 223, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 223, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 223, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 223, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 223, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 223, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 223, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 223, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 223, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 223, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 223, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 224, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 224, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 224, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 224, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 224, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 224, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 224, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 224, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 224, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 224, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 224, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 224, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 224, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 224, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 224, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 224, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 224, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 224, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 224, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 224, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 224, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 224, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 224, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 224, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 224, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 224, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 224, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 224, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 224, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 224, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 224, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 224, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 224, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 224, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 224, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 224, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 224, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 224, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 224, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 224, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 224, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 224, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 224, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 224, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 224, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 224, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 224, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 224, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 224, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 224, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 224, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 224, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 224, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 224, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 224, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 224, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 224, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 224, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 225, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 225, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 225, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 225, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 225, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 225, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 225, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 225, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 225, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 225, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 225, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 225, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 225, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 225, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 225, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 225, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 225, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 225, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 225, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 225, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 225, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 225, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 225, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 225, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 225, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 225, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 225, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 225, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 225, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 225, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 225, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 225, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 225, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 225, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 225, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 225, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 225, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 225, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 225, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 225, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 225, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 225, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 225, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 225, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 225, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 225, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 225, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 225, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 225, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 225, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 225, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 225, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 225, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 225, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 225, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 225, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 225, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 225, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 226, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 226, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 226, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 226, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 226, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 226, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 226, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 226, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 226, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 226, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 226, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 226, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 226, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 226, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 226, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 226, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 226, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 226, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 226, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 226, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 226, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 226, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 226, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 226, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 226, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 226, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 226, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 226, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 226, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 226, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 226, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 226, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 226, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 226, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 226, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 226, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 226, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 226, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 226, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 226, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 226, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 226, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 226, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 226, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 226, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 226, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 226, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 226, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 226, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 226, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 226, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 226, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 226, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 226, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 226, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 226, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 226, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 226, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 227, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 227, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 227, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 227, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 227, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 227, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 227, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 227, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 227, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 227, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 227, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 227, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 227, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 227, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 227, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 227, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 227, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 227, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 227, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 227, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 227, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 227, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 227, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 227, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 227, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 227, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 227, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 227, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 227, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 227, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 227, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 227, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 227, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 227, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 227, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 227, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 227, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 227, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 227, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 227, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 227, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 227, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 227, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 227, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 227, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 227, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 227, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 227, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 227, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 227, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 227, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 227, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 227, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 227, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 227, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 227, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 227, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 227, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 228, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 373)
Conflict at state: 228, token: OP_DEC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 375)
Conflict at state: 228, token: OP_INC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 374)
Conflict at state: 228, token: DOT
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 372)
Conflict at state: 228, token: OPEN_PARENS
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 376)
Conflict at state: 229, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> inclusive-or-expression
  shift token (then go to state 377)
Conflict at state: 230, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 230, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 230, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 230, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 230, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 230, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 230, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 230, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 230, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 230, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 230, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 230, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 230, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 230, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 230, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 230, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 230, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 230, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 230, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 230, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 230, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 230, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 230, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 230, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 230, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 230, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 230, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 230, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 230, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 230, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 230, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 230, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 230, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 230, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 230, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 230, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 230, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 230, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 230, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 230, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 230, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 230, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 230, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 230, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 230, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 230, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 230, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 230, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 230, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 230, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 230, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 230, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 230, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 230, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 230, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 230, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 230, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 230, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 231, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 231, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 231, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 231, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 231, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 231, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 231, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 231, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 231, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 231, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 231, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 231, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 231, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 231, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 231, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 231, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 231, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 231, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 231, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 231, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 231, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 231, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 231, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 231, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 231, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 231, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 231, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 231, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 231, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 231, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 231, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 231, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 231, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 231, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 231, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 231, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 231, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 231, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 231, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 231, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 231, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 231, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 231, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 231, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 231, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 231, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 231, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 231, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 231, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 231, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 231, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 231, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 231, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 231, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 231, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 231, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 231, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 231, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 232, token: OPEN_BRACKET
  reduce by rule: primary-expression -> primary-no-array-creation-expression
  shift token (then go to state 380)
Conflict at state: 234, token: CARET
  reduce by rule: inclusive-or-expression -> exclusive-or-expression
  shift token (then go to state 381)
Conflict at state: 241, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 383)
Conflict at state: 241, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 382)
Conflict at state: 253, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 253, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 257, token: AMP
  reduce by rule: exclusive-or-expression -> and-expression
  shift token (then go to state 391)
Conflict at state: 264, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 264, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 264, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 264, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 264, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 264, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 264, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 264, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 264, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 264, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 264, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 264, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 264, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 264, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 264, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 264, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 264, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 264, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 264, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 264, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 264, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 264, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 264, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 264, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 264, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 264, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 264, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 264, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 264, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 264, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 264, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 264, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 264, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 264, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 264, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 264, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 264, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 264, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 264, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 264, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 264, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 264, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 264, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 264, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 264, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 264, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 264, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 264, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 264, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 264, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 264, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 264, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 264, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 264, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 264, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 264, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 264, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 264, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 267, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DIV
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: PERCENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_LEFT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: RIGHT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_EQ
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_NE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CARET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_AND
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: BITWISE_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: AMP
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: AS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: IS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_COALESCING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_GE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_LE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: GT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: LT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: MINUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: PLUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CLOSE_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: BANG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: TRUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: FALSE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: REAL_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: INTEGER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: STRING_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CHARACTER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: NULL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: AWAIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: STACKALLOC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: BASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: TYPEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: SIZEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: CHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: UNCHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 267, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 274, token: OP_EQ
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 413)
Conflict at state: 274, token: OP_NE
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 414)
Conflict at state: 277, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 278, token: OP_COALESCING
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 420)
Conflict at state: 278, token: AS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 422)
Conflict at state: 278, token: IS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 421)
Conflict at state: 278, token: OP_GE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 419)
Conflict at state: 278, token: OP_LE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 418)
Conflict at state: 278, token: GT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 417)
Conflict at state: 278, token: LT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 416)
Conflict at state: 279, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 423)
Conflict at state: 279, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 424)
Conflict at state: 280, token: OP_COALESCING
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 427)
Conflict at state: 280, token: OP_PTR
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 426)
Conflict at state: 280, token: MINUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 428)
Conflict at state: 280, token: PLUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 425)
Conflict at state: 281, token: STAR
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 429)
Conflict at state: 281, token: DIV
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 430)
Conflict at state: 281, token: PERCENT
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 431)
Conflict at state: 291, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr
  shift token (then go to state 464)
Conflict at state: 291, token: WHERE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 291, token: COMMA
  reduce by rule: interface-type-list -> type-with-interr
  shift token (then go to state 464)
Conflict at state: 291, token: OPEN_BRACE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 292, token: COMMA
  reduce by rule: class-base -> COLON interface-type-list
  shift token (then go to state 465)
Conflict at state: 295, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 296, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 297, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 298, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 302, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 304, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 309, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 311, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 313, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 320, token: COMMA
  reduce by rule: struct-interfaces -> COLON interface-type-list
  shift token (then go to state 465)
Conflict at state: 325, token: COMMA
  reduce by rule: interface-base -> COLON interface-type-list
  shift token (then go to state 465)
Conflict at state: 344, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 344, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 344, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 344, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 344, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 344, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 344, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 344, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 347, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 347, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 347, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 347, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 347, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 347, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 347, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 347, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 348, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 349, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 349, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 349, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 349, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 349, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 349, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 349, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 349, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 349, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 349, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 349, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 349, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 349, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 349, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 349, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 349, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 349, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 349, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 349, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 349, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 349, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 349, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 349, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 349, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 349, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 349, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 349, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 349, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 349, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 349, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 349, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 349, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 349, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 349, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 349, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 349, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 349, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 349, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 349, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 349, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 349, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 349, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 349, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 349, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 349, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 349, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 349, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 349, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 349, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 349, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 349, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 349, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 349, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 349, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 349, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 349, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 349, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 349, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 350, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 350, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 350, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 350, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 350, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 350, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 350, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 350, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 350, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 350, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 350, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 350, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 350, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 350, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 350, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 350, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 350, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 350, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 350, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 350, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 350, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 350, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 350, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 350, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 350, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 350, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 350, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 350, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 350, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 350, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 350, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 350, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 350, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 350, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 350, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 350, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 350, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 350, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 350, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 350, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 350, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 350, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 350, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 350, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 350, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 350, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 350, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 350, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 350, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 350, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 350, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 350, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 350, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 350, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 350, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 350, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 350, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 350, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 351, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 351, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 351, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 351, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 351, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 351, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 351, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 351, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 351, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 351, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 351, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 351, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 351, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 351, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 351, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 351, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 351, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 351, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 351, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 351, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 351, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 351, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 351, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 351, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 351, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 351, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 351, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 351, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 351, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 351, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 351, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 351, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 351, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 351, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 351, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 351, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 351, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 351, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 351, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 351, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 351, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 351, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 351, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 351, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 351, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 351, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 351, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 351, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 351, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 351, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 351, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 351, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 351, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 351, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 351, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 351, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 351, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 351, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 351, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 408)
Conflict at state: 363, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 363, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 363, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 363, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 363, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 363, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 363, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 363, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 363, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 363, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 363, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 363, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 363, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 363, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 363, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 363, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 363, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 363, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 363, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 363, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 363, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 363, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 363, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 363, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 363, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 363, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 363, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 363, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 363, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 363, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 363, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 363, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 363, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 363, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 363, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 363, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 363, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 363, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 363, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 363, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 363, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 363, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 363, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 363, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 363, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 363, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 363, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 363, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 363, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 363, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 363, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 363, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 363, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 363, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 363, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 363, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 363, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 363, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 365, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 348)
Conflict at state: 376, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 376, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 376, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 376, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 376, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 559)
Conflict at state: 376, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 376, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 376, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 376, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 377, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 377, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 377, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 377, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 377, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 377, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 377, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 377, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 377, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 377, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 377, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 377, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 377, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 377, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 377, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 377, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 377, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 377, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 377, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 377, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 377, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 377, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 377, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 377, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 377, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 377, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 377, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 377, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 377, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 377, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 377, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 377, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 377, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 377, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 377, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 377, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 377, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 377, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 377, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 377, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 377, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 377, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 377, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 377, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 377, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 377, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 377, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 377, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 377, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 377, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 377, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 377, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 377, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 377, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 377, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 377, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 377, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 377, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 380, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 380, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 380, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 380, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 380, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 567)
Conflict at state: 380, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 380, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 338)
Conflict at state: 380, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 380, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 380, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 381, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 381, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 381, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 381, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 381, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 381, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 381, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 381, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 381, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 381, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 381, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 381, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 381, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 381, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 381, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 381, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 381, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 381, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 381, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 381, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 381, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 381, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 381, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 381, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 381, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 381, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 381, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 381, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 381, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 381, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 381, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 381, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 381, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 381, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 381, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 381, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 381, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 381, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 381, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 381, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 381, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 381, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 381, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 381, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 381, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 381, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 381, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 381, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 381, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 381, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 381, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 381, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 381, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 381, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 381, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 381, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 381, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 381, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 382, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 384, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 384, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 384, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 384, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 384, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 384, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 384, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 384, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 384, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 384, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 384, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 384, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 384, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 384, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 384, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 384, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 384, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 384, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 384, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 384, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 384, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 384, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 384, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 384, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 384, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 384, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 384, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 384, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 384, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 384, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 384, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 384, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 384, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 384, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 384, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 384, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 384, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 384, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 384, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 384, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 384, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 384, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 384, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 384, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 384, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 384, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 384, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 384, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 384, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 384, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 384, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 384, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 384, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 384, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 384, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 384, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 384, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 384, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 384, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 387)
Conflict at state: 387, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 387, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 387, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 387, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 387, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 387, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 387, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 387, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 387, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 387, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 387, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 387, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 387, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 387, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 387, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 387, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 461)
Conflict at state: 387, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 387, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 387, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 387, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 387, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 387, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 388, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 643)
Conflict at state: 391, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 391, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 391, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 391, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 391, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 391, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 391, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 391, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 391, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 391, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 391, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 391, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 391, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 391, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 391, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 391, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 391, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 391, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 391, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 391, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 391, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 391, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 391, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 391, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 391, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 391, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 391, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 391, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 391, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 391, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 391, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 391, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 391, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 391, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 391, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 391, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 391, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 391, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 391, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 391, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 391, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 391, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 391, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 391, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 391, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 391, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 391, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 391, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 391, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 391, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 391, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 391, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 391, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 391, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 391, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 391, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 391, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 391, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 395, token: DOT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 398)
Conflict at state: 395, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 654)
Conflict at state: 395, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 395, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 395, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 395, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 189)
Conflict at state: 395, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: type-with-interr -> type
Conflict at state: 395, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 192)
Conflict at state: 395, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 395, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 395, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 395, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 396, token: CLOSE_PARENS
  reduce by rule: expression-list -> expression
  shift token (then go to state 655)
Conflict at state: 396, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 396, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 396, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 396, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 396, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 655)
Conflict at state: 396, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: expression-list -> expression
Conflict at state: 396, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 396, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 396, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 396, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 401, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 401, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 401, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 401, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 401, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 401, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 401, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 401, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 404, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 669)
Conflict at state: 404, token: OPEN_PARENS
  reduce by rule: type-with-identifier -> non-array-type
  reduce by rule: type -> non-array-type
Conflict at state: 404, token: OPEN_BRACE
  reduce by rule: type-with-identifier -> non-array-type
  reduce by rule: type -> non-array-type
Conflict at state: 404, token: OPEN_BRACKET
  reduce by rule: type-with-identifier -> non-array-type
  shift token (then go to state 669)
Conflict at state: 405, token: OPEN_BRACKET
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 192)
Conflict at state: 405, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 408)
Conflict at state: 408, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 408, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 408, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 408, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 408, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 408, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 408, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 408, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 411, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 411, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 411, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 411, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 411, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 411, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 411, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 411, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 412, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 412, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 412, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 412, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 412, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 412, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 412, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 412, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 413, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 413, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 413, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 413, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 413, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 413, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 413, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 413, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 413, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 413, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 413, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 413, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 413, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 413, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 413, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 413, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 413, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 413, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 413, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 413, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 413, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 413, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 413, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 413, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 413, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 413, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 413, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 413, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 413, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 413, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 413, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 413, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 413, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 413, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 413, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 413, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 413, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 413, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 413, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 413, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 413, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 413, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 413, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 413, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 413, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 413, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 413, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 413, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 413, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 413, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 413, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 413, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 413, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 413, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 413, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 413, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 413, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 413, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 414, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 414, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 414, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 414, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 414, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 414, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 414, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 414, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 414, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 414, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 414, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 414, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 414, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 414, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 414, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 414, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 414, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 414, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 414, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 414, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 414, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 414, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 414, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 414, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 414, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 414, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 414, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 414, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 414, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 414, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 414, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 414, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 414, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 414, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 414, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 414, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 414, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 414, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 414, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 414, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 414, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 414, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 414, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 414, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 414, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 414, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 414, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 414, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 414, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 414, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 414, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 414, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 414, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 414, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 414, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 414, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 414, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 414, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 416, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 416, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 416, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 416, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 416, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 416, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 416, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 416, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 416, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 416, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 416, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 416, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 416, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 416, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 416, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 416, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 416, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 416, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 416, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 416, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 416, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 416, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 416, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 416, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 416, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 416, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 416, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 416, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 416, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 416, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 416, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 416, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 416, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 416, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 416, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 416, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 416, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 416, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 416, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 416, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 416, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 416, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 416, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 416, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 416, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 416, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 416, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 416, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 416, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 416, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 416, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 416, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 416, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 416, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 416, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 416, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 416, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 416, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 417, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 417, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 417, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 417, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 417, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 417, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 417, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 417, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 417, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 417, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 417, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 417, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 417, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 417, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 417, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 417, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 417, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 417, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 417, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 417, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 417, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 417, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 417, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 417, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 417, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 417, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 417, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 417, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 417, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 417, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 417, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 417, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 417, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 417, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 417, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 417, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 417, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 417, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 417, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 417, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 417, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 417, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 417, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 417, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 417, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 417, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 417, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 417, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 417, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 417, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 417, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 417, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 417, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 417, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 417, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 417, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 417, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 417, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 418, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 418, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 418, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 418, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 418, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 418, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 418, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 418, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 418, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 418, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 418, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 418, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 418, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 418, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 418, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 418, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 418, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 418, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 418, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 418, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 418, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 418, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 418, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 418, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 418, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 418, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 418, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 418, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 418, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 418, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 418, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 418, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 418, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 418, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 418, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 418, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 418, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 418, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 418, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 418, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 418, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 418, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 418, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 418, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 418, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 418, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 418, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 418, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 418, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 418, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 418, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 418, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 418, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 418, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 418, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 418, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 418, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 418, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 419, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 419, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 419, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 419, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 419, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 419, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 419, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 419, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 419, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 419, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 419, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 419, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 419, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 419, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 419, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 419, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 419, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 419, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 419, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 419, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 419, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 419, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 419, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 419, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 419, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 419, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 419, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 419, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 419, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 419, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 419, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 419, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 419, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 419, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 419, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 419, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 419, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 419, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 419, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 419, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 419, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 419, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 419, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 419, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 419, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 419, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 419, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 419, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 419, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 419, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 419, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 419, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 419, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 419, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 419, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 419, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 419, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 419, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 420, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 420, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 420, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 420, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 420, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 420, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 420, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 420, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 420, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 420, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 420, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 420, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 420, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 420, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 420, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 420, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 420, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 420, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 420, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 420, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 420, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 420, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 420, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 420, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 420, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 420, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 420, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 420, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 420, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 420, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 420, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 420, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 420, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 420, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 420, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 420, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 420, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 420, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 420, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 420, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 420, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 420, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 420, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 420, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 420, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 420, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 420, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 420, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 420, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 420, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 420, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 420, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 420, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 420, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 420, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 420, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 420, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 420, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 423, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 423, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 423, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 423, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 423, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 423, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 423, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 423, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 423, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 423, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 423, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 423, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 423, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 423, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 423, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 423, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 423, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 423, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 423, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 423, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 423, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 423, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 423, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 423, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 423, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 423, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 423, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 423, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 423, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 423, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 423, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 423, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 423, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 423, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 423, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 423, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 423, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 423, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 423, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 423, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 423, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 423, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 423, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 423, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 423, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 423, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 423, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 423, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 423, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 423, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 423, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 423, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 423, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 423, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 423, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 423, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 423, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 423, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 424, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 424, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 424, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 424, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 424, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 424, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 424, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 424, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 424, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 424, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 424, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 424, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 424, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 424, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 424, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 424, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 424, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 424, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 424, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 424, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 424, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 424, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 424, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 424, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 424, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 424, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 424, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 424, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 424, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 424, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 424, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 424, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 424, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 424, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 424, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 424, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 424, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 424, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 424, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 424, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 424, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 424, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 424, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 424, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 424, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 424, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 424, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 424, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 424, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 424, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 424, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 424, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 424, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 424, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 424, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 424, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 424, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 424, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 425, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 425, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 425, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 425, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 425, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 425, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 425, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 425, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 425, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 425, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 425, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 425, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 425, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 425, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 425, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 425, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 425, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 425, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 425, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 425, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 425, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 425, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 425, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 425, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 425, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 425, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 425, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 425, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 425, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 425, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 425, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 425, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 425, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 425, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 425, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 425, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 425, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 425, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 425, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 425, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 425, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 425, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 425, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 425, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 425, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 425, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 425, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 425, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 425, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 425, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 425, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 425, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 425, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 425, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 425, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 425, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 425, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 425, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 426, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 426, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 426, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 426, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 426, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 426, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 426, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 426, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 426, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 426, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 426, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 426, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 426, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 426, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 426, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 426, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 426, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 426, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 426, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 426, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 426, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 426, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 426, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 426, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 426, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 426, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 426, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 426, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 426, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 426, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 426, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 426, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 426, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 426, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 426, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 426, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 426, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 426, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 426, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 426, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 426, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 426, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 426, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 426, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 426, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 426, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 426, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 426, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 426, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 426, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 426, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 426, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 426, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 426, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 426, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 426, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 426, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 426, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 427, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 427, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 427, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 427, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 427, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 427, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 427, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 427, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 427, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 427, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 427, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 427, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 427, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 427, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 427, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 427, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 427, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 427, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 427, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 427, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 427, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 427, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 427, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 427, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 427, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 427, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 427, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 427, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 427, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 427, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 427, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 427, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 427, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 427, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 427, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 427, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 427, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 427, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 427, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 427, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 427, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 427, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 427, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 427, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 427, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 427, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 427, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 427, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 427, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 427, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 427, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 427, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 427, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 427, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 427, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 427, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 427, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 427, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 428, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 428, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 428, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 428, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 428, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 428, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 428, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 428, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 428, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 428, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 428, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 428, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 428, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 428, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 428, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 428, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 428, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 428, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 428, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 428, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 428, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 428, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 428, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 428, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 428, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 428, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 428, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 428, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 428, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 428, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 428, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 428, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 428, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 428, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 428, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 428, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 428, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 428, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 428, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 428, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 428, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 428, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 428, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 428, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 428, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 428, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 428, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 428, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 428, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 428, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 428, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 428, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 428, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 428, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 428, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 428, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 428, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 428, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 429, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 429, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 429, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 429, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 429, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 429, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 429, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 429, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 429, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 429, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 429, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 429, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 429, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 429, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 429, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 429, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 429, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 429, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 429, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 429, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 429, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 429, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 429, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 429, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 429, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 429, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 429, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 429, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 429, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 429, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 429, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 429, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 429, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 429, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 429, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 429, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 429, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 429, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 429, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 429, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 429, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 429, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 429, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 429, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 429, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 429, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 429, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 429, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 429, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 429, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 429, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 429, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 429, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 429, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 429, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 429, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 429, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 429, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 430, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 430, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 430, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 430, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 430, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 430, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 430, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 430, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 430, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 430, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 430, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 430, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 430, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 430, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 430, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 430, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 430, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 430, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 430, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 430, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 430, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 430, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 430, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 430, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 430, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 430, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 430, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 430, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 430, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 430, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 430, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 430, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 430, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 430, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 430, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 430, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 430, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 430, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 430, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 430, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 430, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 430, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 430, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 430, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 430, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 430, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 430, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 430, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 430, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 430, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 430, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 430, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 430, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 430, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 430, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 430, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 430, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 430, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 431, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 431, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 431, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 431, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 431, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 431, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 431, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 431, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 431, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 431, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 431, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 431, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 431, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 431, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 431, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 431, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 431, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 431, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 431, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 431, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 431, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 431, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 431, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 431, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 431, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 431, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 431, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 431, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 431, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 431, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 431, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 431, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 431, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 431, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 431, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 431, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 431, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 431, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 431, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 431, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 431, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 431, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 431, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 431, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 431, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 431, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 431, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 431, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 431, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 431, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 431, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 431, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 431, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 431, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 431, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 431, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 431, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 431, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 461, token: EXPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: IMPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: EVENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: CONST
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ENUM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: INTERFACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: STRUCT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: CLASS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: EXTERN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OVERRIDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: VIRTUAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: VOLATILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: READONLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: STATIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: SEALED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ABSTRACT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PRIVATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: INTERNAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PROTECTED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PARTIAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: PUBLIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: UNSAFE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: FIXED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 461, token: OPERATOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 470, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 472, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 474, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 526, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 526, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 526, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 526, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 526, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 526, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 526, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 526, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 528, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 533, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 77)
Conflict at state: 533, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 533, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 75)
Conflict at state: 533, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 74)
Conflict at state: 533, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 73)
Conflict at state: 533, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 72)
Conflict at state: 533, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 71)
Conflict at state: 533, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 533, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 69)
Conflict at state: 533, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 68)
Conflict at state: 533, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 67)
Conflict at state: 533, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 66)
Conflict at state: 533, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 65)
Conflict at state: 533, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 64)
Conflict at state: 533, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 63)
Conflict at state: 533, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 60)
Conflict at state: 536, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 77)
Conflict at state: 536, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 76)
Conflict at state: 536, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 75)
Conflict at state: 536, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 74)
Conflict at state: 536, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 73)
Conflict at state: 536, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 72)
Conflict at state: 536, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 71)
Conflict at state: 536, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 70)
Conflict at state: 536, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 69)
Conflict at state: 536, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 68)
Conflict at state: 536, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 67)
Conflict at state: 536, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 66)
Conflict at state: 536, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 65)
Conflict at state: 536, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 64)
Conflict at state: 536, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 63)
Conflict at state: 536, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 60)
Conflict at state: 547, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 547, token: DOT
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 547, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 547, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 547, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 547, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 549, token: COLON
  reduce by rule: conditional-expression -> conditional-or-expression INTERR expression
  shift token (then go to state 806)
Conflict at state: 550, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression
  shift token (then go to state 363)
Conflict at state: 554, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression
  shift token (then go to state 377)
Conflict at state: 562, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 562, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 562, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 562, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 562, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 562, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 562, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 562, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 563, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 563, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 563, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 563, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 563, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 563, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 563, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 563, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 564, token: CARET
  reduce by rule: inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression
  shift token (then go to state 381)
Conflict at state: 569, token: AMP
  reduce by rule: exclusive-or-expression -> exclusive-or-expression CARET and-expression
  shift token (then go to state 391)
Conflict at state: 570, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 570, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 571, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 571, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 571, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 571, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 571, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 571, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 578, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 578, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 578, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 578, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 578, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 578, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 578, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 578, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 578, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 578, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 578, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 578, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 578, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 578, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 578, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 578, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 461)
Conflict at state: 578, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 578, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 578, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 578, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 578, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 578, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 583, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 583, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 599, token: INTERR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 827)
Conflict at state: 599, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 373)
Conflict at state: 599, token: STAR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 194)
Conflict at state: 599, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 599, token: CLOSE_PARENS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 603, token: OP_PTR
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 383)
Conflict at state: 603, token: DOT
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 382)
Conflict at state: 603, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: THIS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: SET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: ADD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: STAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 383)
Conflict at state: 603, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 382)
Conflict at state: 603, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 603, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 604, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: THIS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: SET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: ADD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: STAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 604, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 606, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 606, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 607, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 607, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 608, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 608, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 609, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 609, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 629, token: ASYNC
  reduce by rule: modifier -> NEW
  shift token (then go to state 76)
Conflict at state: 634, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 634, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 634, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 634, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 634, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 641, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 641, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 641, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 641, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 641, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 854)
Conflict at state: 641, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 641, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 641, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 641, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 642, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 642, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 642, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 642, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 642, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 856)
Conflict at state: 642, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 642, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 642, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 642, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 643, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 643, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 643, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 643, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 643, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 858)
Conflict at state: 643, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 643, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 643, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 643, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 645, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 645, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 645, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 645, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 645, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 860)
Conflict at state: 645, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 645, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 645, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 645, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 646, token: OP_EQ
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 413)
Conflict at state: 646, token: OP_NE
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 414)
Conflict at state: 648, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 648, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 648, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 648, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 648, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 648, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 648, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 648, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 648, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 648, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 648, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 648, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 648, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 648, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 648, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 648, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 648, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 648, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 648, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 648, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 648, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 648, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 648, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 648, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 648, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 648, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 648, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 648, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 648, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 648, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 648, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 648, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 648, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 648, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 648, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 648, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 648, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 648, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 648, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 648, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 648, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 648, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 648, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 648, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 648, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 648, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 648, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 648, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 648, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 648, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 648, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 648, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 648, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 648, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 648, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 648, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 648, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 648, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 652, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 652, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 652, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 652, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 652, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 652, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 652, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 652, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 653, token: CLOSE_PARENS
  reduce by rule: type-expression-list -> type expression
  shift token (then go to state 871)
Conflict at state: 654, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 654, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 654, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 654, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 654, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 654, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 654, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 654, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 655, token: OP_PTR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 222)
Conflict at state: 655, token: OP_INC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 230)
Conflict at state: 655, token: OP_DEC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 231)
Conflict at state: 655, token: OPEN_PARENS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 264)
Conflict at state: 655, token: STAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 227)
Conflict at state: 655, token: OP_COALESCING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 223)
Conflict at state: 655, token: MINUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 224)
Conflict at state: 655, token: PLUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 221)
Conflict at state: 655, token: BANG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 225)
Conflict at state: 655, token: TILDE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 226)
Conflict at state: 655, token: TRUE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 275)
Conflict at state: 655, token: FALSE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 276)
Conflict at state: 655, token: REAL_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 259)
Conflict at state: 655, token: INTEGER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 260)
Conflict at state: 655, token: STRING_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 261)
Conflict at state: 655, token: CHARACTER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 262)
Conflict at state: 655, token: NULL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 263)
Conflict at state: 655, token: IDENTIFIER
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 60)
Conflict at state: 655, token: AWAIT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 277)
Conflict at state: 655, token: DELEGATE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 254)
Conflict at state: 655, token: STACKALLOC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 256)
Conflict at state: 655, token: SBYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 119)
Conflict at state: 655, token: BYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 120)
Conflict at state: 655, token: SHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 121)
Conflict at state: 655, token: USHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 122)
Conflict at state: 655, token: INT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 123)
Conflict at state: 655, token: UINT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 124)
Conflict at state: 655, token: LONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 125)
Conflict at state: 655, token: ULONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 126)
Conflict at state: 655, token: CHAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 127)
Conflict at state: 655, token: FLOAT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 128)
Conflict at state: 655, token: DOUBLE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 129)
Conflict at state: 655, token: DECIMAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 130)
Conflict at state: 655, token: BOOL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 131)
Conflict at state: 655, token: OBJECT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 132)
Conflict at state: 655, token: STRING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 133)
Conflict at state: 655, token: VOID
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 134)
Conflict at state: 655, token: THIS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 267)
Conflict at state: 655, token: BASE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 268)
Conflict at state: 655, token: NEW
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 269)
Conflict at state: 655, token: TYPEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 270)
Conflict at state: 655, token: SIZEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 271)
Conflict at state: 655, token: CHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 272)
Conflict at state: 655, token: UNCHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 273)
Conflict at state: 655, token: ADD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 63)
Conflict at state: 655, token: REMOVE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 64)
Conflict at state: 655, token: SET
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 65)
Conflict at state: 655, token: PARAMS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 66)
Conflict at state: 655, token: DEFAULT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 67)
Conflict at state: 655, token: METHOD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 68)
Conflict at state: 655, token: PARAM
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 69)
Conflict at state: 655, token: ASSEMBLY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 70)
Conflict at state: 655, token: PROPERTY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 71)
Conflict at state: 655, token: MODULE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 72)
Conflict at state: 655, token: FIELD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 73)
Conflict at state: 655, token: TYPE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 74)
Conflict at state: 655, token: ASYNC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 76)
Conflict at state: 655, token: WHERE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 77)
Conflict at state: 655, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 655, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 655, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 655, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 655, token: PERCENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: DIV
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 655, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 655, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 655, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 655, token: RIGHT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_LEFT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_GE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_LE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: GT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: LT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_NE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_EQ
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: AMP
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 655, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 655, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 655, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 655, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 655, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 655, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 655, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 655, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 655, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 655, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 655, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 655, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 655, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 655, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 655, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 655, token: CARET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: BITWISE_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_AND
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OP_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 655, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 655, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 655, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 655, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 655, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 655, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 655, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 655, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 655, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 655, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 655, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 655, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 655, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 655, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 655, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 655, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 655, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 655, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 655, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 655, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 655, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 655, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 655, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 655, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 655, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 655, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 655, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 655, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 655, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 655, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 655, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 655, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 655, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 655, token: AS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: IS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 655, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 657, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 657, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 657, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 657, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 657, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 657, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 657, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 657, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 657, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 657, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 657, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 657, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 657, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 657, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 657, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 657, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 657, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 657, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 657, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 657, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 657, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 657, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 657, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 657, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 657, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 657, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 657, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 657, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 657, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 657, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 657, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 657, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 657, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 657, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 657, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 657, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 657, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 657, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 657, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 657, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 657, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 657, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 657, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 657, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 657, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 657, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 657, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 657, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 657, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 657, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 657, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 657, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 657, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 657, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 657, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 657, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 657, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 657, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 662, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 662, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 662, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 662, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 662, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 878)
Conflict at state: 662, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 662, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 662, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 662, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 664, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 664, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 664, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 664, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 664, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 880)
Conflict at state: 664, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 664, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 664, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 664, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 667, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 667, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 667, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 667, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 667, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 338)
Conflict at state: 667, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 667, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 667, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 667, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 667, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 669, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 669, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 669, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 669, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 669, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 338)
Conflict at state: 669, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 669, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 669, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 669, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 669, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 671, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 671, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 671, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 671, token: STAR
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 671, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 671, token: DOT
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 680, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 420)
Conflict at state: 680, token: AS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 422)
Conflict at state: 680, token: IS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 421)
Conflict at state: 680, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 419)
Conflict at state: 680, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 418)
Conflict at state: 680, token: GT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 417)
Conflict at state: 680, token: LT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 416)
Conflict at state: 681, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 420)
Conflict at state: 681, token: AS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 422)
Conflict at state: 681, token: IS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 421)
Conflict at state: 681, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 419)
Conflict at state: 681, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 418)
Conflict at state: 681, token: GT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 417)
Conflict at state: 681, token: LT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 416)
Conflict at state: 682, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 682, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 682, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 682, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 682, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 893)
Conflict at state: 682, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 682, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 682, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 682, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 683, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 423)
Conflict at state: 683, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 424)
Conflict at state: 684, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 423)
Conflict at state: 684, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 424)
Conflict at state: 685, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 423)
Conflict at state: 685, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 424)
Conflict at state: 686, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 423)
Conflict at state: 686, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 424)
Conflict at state: 687, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 423)
Conflict at state: 687, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 424)
Conflict at state: 688, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression IS type
  shift token (then go to state 192)
Conflict at state: 689, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression AS type
  shift token (then go to state 192)
Conflict at state: 690, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 427)
Conflict at state: 690, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 426)
Conflict at state: 690, token: MINUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 428)
Conflict at state: 690, token: PLUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 425)
Conflict at state: 691, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 427)
Conflict at state: 691, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 426)
Conflict at state: 691, token: MINUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 428)
Conflict at state: 691, token: PLUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 425)
Conflict at state: 692, token: STAR
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 429)
Conflict at state: 692, token: DIV
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 430)
Conflict at state: 692, token: PERCENT
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 431)
Conflict at state: 693, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 429)
Conflict at state: 693, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 430)
Conflict at state: 693, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 431)
Conflict at state: 694, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 429)
Conflict at state: 694, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 430)
Conflict at state: 694, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 431)
Conflict at state: 695, token: STAR
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 429)
Conflict at state: 695, token: DIV
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 430)
Conflict at state: 695, token: PERCENT
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 431)
Conflict at state: 726, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 925)
Conflict at state: 740, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr COMMA interface-type-list
  shift token (then go to state 465)
Conflict at state: 742, token: COMMA
  reduce by rule: where-unit -> WHERE type-name COLON where-names
  shift token (then go to state 942)
Conflict at state: 744, token: COMMA
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 744, token: OPEN_BRACE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 744, token: WHERE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 744, token: SEMICOLON
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 744, token: STAR
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 744, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 765, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 774, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 794, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 794, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 794, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 794, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 794, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 794, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 794, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 794, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 796, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 799, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 77)
Conflict at state: 799, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 799, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 75)
Conflict at state: 799, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 74)
Conflict at state: 799, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 73)
Conflict at state: 799, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 72)
Conflict at state: 799, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 71)
Conflict at state: 799, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 799, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 69)
Conflict at state: 799, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 68)
Conflict at state: 799, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 67)
Conflict at state: 799, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 66)
Conflict at state: 799, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 65)
Conflict at state: 799, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 64)
Conflict at state: 799, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 63)
Conflict at state: 799, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 60)
Conflict at state: 806, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 806, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 806, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 806, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 806, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 806, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 806, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 806, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 806, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 806, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 806, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 806, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 806, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 806, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 806, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 806, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 806, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 806, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 806, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 806, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 806, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 806, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 806, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 806, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 806, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 806, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 806, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 806, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 806, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 806, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 806, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 806, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 806, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 806, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 806, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 806, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 806, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 806, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 806, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 806, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 806, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 806, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 806, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 806, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 806, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 806, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 806, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 806, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 806, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 806, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 806, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 806, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 806, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 806, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 806, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 806, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 806, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 806, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 809, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 809, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 809, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 809, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 809, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 809, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 809, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 809, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 810, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 810, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 810, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 810, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 810, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 810, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 810, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 810, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 820, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 820, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 820, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 820, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 820, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 820, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 820, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 995)
Conflict at state: 820, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 820, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 820, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 820, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 820, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 820, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 820, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 820, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 820, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 461)
Conflict at state: 820, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 820, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 820, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 820, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 820, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 820, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 835, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 835, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 835, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 835, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 835, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 835, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 835, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 835, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 836, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 836, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 836, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 836, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 836, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 836, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 836, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 836, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 836, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 836, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 836, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 836, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 836, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 836, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 836, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 836, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 836, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 836, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 836, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 836, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 836, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 836, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 836, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 836, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 840, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 840, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 840, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 840, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 840, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 840, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 840, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 840, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 841, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 841, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 841, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 841, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 841, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 841, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 841, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 841, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 842, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 842, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 842, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 842, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 842, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 842, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 842, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 842, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 844, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1019)
Conflict at state: 844, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 844, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 844, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 844, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 844, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 844, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 844, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 844, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 844, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 844, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 844, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 844, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 844, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 844, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 844, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 844, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 844, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 844, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 844, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 844, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 844, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 847, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 847, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 847, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 847, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 847, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1028)
Conflict at state: 847, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 847, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 847, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 847, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 851, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 851, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 851, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 851, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 851, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 851, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 851, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 851, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 863, token: COMMA
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 863, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 863, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 863, token: OPEN_PARENS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 863, token: OPEN_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 863, token: SEMICOLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 864, token: COMMA
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 864, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 864, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 864, token: OPEN_PARENS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 864, token: OPEN_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 864, token: SEMICOLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 865, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 865, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 865, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 865, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 865, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 865, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 865, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 865, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 865, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 865, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 865, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 865, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 865, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 865, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 865, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 865, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 865, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 865, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 865, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 865, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 865, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 865, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 865, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 865, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 865, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 865, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 865, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 865, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 865, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 865, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 865, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 865, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 865, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 865, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 865, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 865, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 865, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 865, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 865, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 865, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 865, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 865, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 865, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 865, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 865, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 865, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 865, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 865, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 865, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 865, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 865, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 865, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 865, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 865, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 865, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 865, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 865, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 865, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 865, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 387)
Conflict at state: 866, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 866, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 866, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 866, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 866, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 866, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 866, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 866, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 867, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 867, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 867, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 867, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 867, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 867, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 867, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 867, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 867, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 867, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 867, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 867, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 867, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 867, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 867, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 867, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 867, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 867, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 867, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 867, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 867, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 867, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 867, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 867, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 867, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 867, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 867, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 867, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 867, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 867, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 867, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 867, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 867, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 867, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 867, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 867, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 867, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 867, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 867, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 867, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 867, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 867, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 867, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 867, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 867, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 867, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 867, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 867, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 867, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 867, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 867, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 867, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 867, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 867, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 867, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 867, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 867, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 867, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 867, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 387)
Conflict at state: 868, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 868, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 868, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 868, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 868, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 192)
Conflict at state: 868, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 868, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 868, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 868, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 869, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 869, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 869, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 869, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 869, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 869, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 869, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 869, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 869, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 869, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 869, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 869, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 869, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 869, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 869, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 869, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 869, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 869, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 869, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 869, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 869, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 869, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 869, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 869, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 869, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 869, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 869, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 869, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 869, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 869, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 869, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 869, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 869, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 869, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 869, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 869, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 869, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 869, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 869, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 869, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 869, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 869, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 869, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 869, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 869, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 869, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 869, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 869, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 869, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 869, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 869, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 869, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 869, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 869, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 869, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 869, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 869, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 869, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 869, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 387)
Conflict at state: 872, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 872, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 873, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 873, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 873, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 873, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 873, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 873, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 873, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 873, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 873, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 873, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 873, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 873, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 873, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 873, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 873, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 873, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 873, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 873, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 873, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 873, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 873, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 873, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 873, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 873, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 873, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 873, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 873, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 873, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 873, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 873, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 873, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 873, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 873, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 873, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 873, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 873, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 873, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 873, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 873, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 873, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 873, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 873, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 873, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 873, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 873, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 873, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 873, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 873, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 873, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 873, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 873, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 873, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 873, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 873, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 873, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 873, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 873, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 873, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 878, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 408)
Conflict at state: 880, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 408)
Conflict at state: 880, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 880, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 880, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 880, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 880, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 880, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 880, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 880, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 880, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 880, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 880, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 880, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 880, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 880, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 880, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 880, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 880, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 880, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 880, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 880, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 880, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 880, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 880, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 880, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 880, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 880, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 880, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 880, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 880, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 880, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 880, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 880, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 880, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 880, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 880, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 880, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 880, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 880, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 880, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 880, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 880, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 880, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 880, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 880, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 880, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 880, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 880, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 880, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 880, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 886, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 886, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 886, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 886, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 886, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 886, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 886, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 886, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 893, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 893, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 893, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 893, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 893, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 893, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 895, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 895, token: COMMA
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 927, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 927, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 927, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 927, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 927, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 645)
Conflict at state: 927, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 927, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 927, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 927, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 952, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 957, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 962, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 984, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 984, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 984, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 984, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 984, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 984, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 984, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 984, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 991, token: DEFAULT
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 1177)
Conflict at state: 991, token: CASE
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 994)
Conflict at state: 994, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 994, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 994, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 994, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 994, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 994, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 994, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 994, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 995, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> DEFAULT
  shift token (then go to state 1179)
Conflict at state: 997, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 997, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 997, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 997, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 997, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 997, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 997, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 997, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1015, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 1015, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 1019, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1019, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1019, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1019, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1019, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1198)
Conflict at state: 1019, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1019, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1019, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1019, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1036, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1036, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1036, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1036, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1036, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1208)
Conflict at state: 1036, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1036, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1036, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1036, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1037, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 192)
Conflict at state: 1037, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 645)
Conflict at state: 1039, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1039, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1039, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1039, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1039, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1211)
Conflict at state: 1039, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1039, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1039, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1039, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1048, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1048, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1048, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1048, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1048, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1048, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1048, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1048, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1049, token: OPEN_BRACE
  reduce by rule: cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
  shift token (then go to state 387)
Conflict at state: 1050, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS
  shift token (then go to state 408)
Conflict at state: 1052, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1052, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 1052, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 1052, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1052, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 260)
Conflict at state: 1052, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 261)
Conflict at state: 1052, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 1052, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 1052, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 1052, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 1052, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 1052, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 1052, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 1052, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 1052, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 1052, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 1052, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 1052, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 1052, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 1052, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 1052, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 1052, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 1052, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 1052, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 1052, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 1052, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1052, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 1052, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 1052, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 1052, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 1052, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 269)
Conflict at state: 1052, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 1052, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 1052, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 1052, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 273)
Conflict at state: 1052, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1052, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1052, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1052, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1052, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1052, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1052, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1052, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1052, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1052, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1052, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1052, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1052, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1052, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1053, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 383)
Conflict at state: 1053, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1218)
Conflict at state: 1053, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1053, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 383)
Conflict at state: 1053, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1218)
Conflict at state: 1053, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1053, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1053, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1055, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 408)
Conflict at state: 1056, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 408)
Conflict at state: 1058, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1058, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1058, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1058, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1058, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1058, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1059, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1059, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1059, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1059, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1059, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1059, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1062, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1062, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1062, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1062, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1062, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1062, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1062, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1062, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1088, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> MINUS
  reduce by rule: overloadable-unary-operator -> MINUS
Conflict at state: 1091, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> PLUS
  reduce by rule: overloadable-unary-operator -> PLUS
Conflict at state: 1111, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 387)
Conflict at state: 1111, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 734)
Conflict at state: 1115, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1148, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1153, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1190, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1190, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1190, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1190, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1190, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1191, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1191, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1191, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1191, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1191, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1194, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1194, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1194, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1194, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1194, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1196, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1196, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1196, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1196, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1196, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1197, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1197, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1197, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1197, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1197, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1197, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1197, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1197, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1198, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1312)
Conflict at state: 1198, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1198, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1198, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1198, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1201, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1201, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1201, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1201, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1201, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1316)
Conflict at state: 1201, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1201, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1201, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1201, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1202, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1202, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1202, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1202, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1209, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 192)
Conflict at state: 1209, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 645)
Conflict at state: 1216, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 383)
Conflict at state: 1216, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1218)
Conflict at state: 1216, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1216, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 383)
Conflict at state: 1216, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1218)
Conflict at state: 1216, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1216, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1216, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1217, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 408)
Conflict at state: 1218, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1221, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1221, token: COMMA
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1222, token: SEMICOLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1222, token: COMMA
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1231, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 387)
Conflict at state: 1231, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 734)
Conflict at state: 1233, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1242, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1253, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1280, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1287, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1296, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1306, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1306, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1306, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1306, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1306, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1307, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 1390)
Conflict at state: 1312, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1312, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1312, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1312, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1312, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1315, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1398)
Conflict at state: 1315, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1315, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1315, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1315, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1316, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1400)
Conflict at state: 1316, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1316, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1316, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1316, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1319, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1319, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1319, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1319, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1319, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1319, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1319, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1319, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1320, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1320, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1320, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1320, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1320, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1404)
Conflict at state: 1320, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1320, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1320, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1320, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1324, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 408)
Conflict at state: 1326, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1326, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1329, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1337, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1343, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1361, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1361, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1361, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1361, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1361, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1422)
Conflict at state: 1361, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1361, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1361, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1361, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1362, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1362, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1362, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1362, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1362, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1424)
Conflict at state: 1362, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1362, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 223)
Conflict at state: 1362, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 1362, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 1374, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1377, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1383, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1388, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1388, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1388, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1388, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1388, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1390, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1390, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1390, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1390, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1390, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1394, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1394, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1394, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1394, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1394, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1394, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1394, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 995)
Conflict at state: 1394, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1394, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1394, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1394, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1394, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1394, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1394, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1394, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 1394, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 461)
Conflict at state: 1394, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1394, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 1394, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1394, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1394, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1394, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1397, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1397, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1397, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1397, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1397, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1398, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1398, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1398, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1398, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1398, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1400, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1400, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1400, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1400, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1400, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1402, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1459)
Conflict at state: 1402, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1402, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1402, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1402, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1408, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1416, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1466)
Conflict at state: 1418, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1468)
Conflict at state: 1440, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 162)
Conflict at state: 1452, token: DEFAULT
  reduce by rule: switch-section -> switch-labels statement-list
  shift token (then go to state 67)
Conflict at state: 1452, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1452, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 1452, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1452, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1452, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1452, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1452, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1452, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1452, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1452, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1452, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1452, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1452, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1452, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1452, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 1452, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 461)
Conflict at state: 1452, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1452, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 1452, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1452, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1452, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1452, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1456, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1456, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1456, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1456, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1456, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1458, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1458, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1458, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1458, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1458, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1459, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1459, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1459, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1459, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1459, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1461, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1461, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1461, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1461, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1461, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1490, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 602)
Conflict at state: 1490, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 230)
Conflict at state: 1490, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 231)
Conflict at state: 1490, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1490, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)

4343 Conflict(s) found in grammar.
Done.
